<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='prosperLoanData' inline='true' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='prosperLoanData' name='textscan.1q5b03d1val7gq1g5v2tj03glt7l'>
            <connection class='textscan' directory='/Users/Miyal/Desktop/Udacity/Data Visualization/Project' filename='prosperLoanData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1q5b03d1val7gq1g5v2tj03glt7l' name='prosperLoanData.csv' table='[prosperLoanData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='ListingKey' ordinal='0' />
            <column datatype='integer' name='ListingNumber' ordinal='1' />
            <column datatype='datetime' name='ListingCreationDate' ordinal='2' />
            <column datatype='string' name='CreditGrade' ordinal='3' />
            <column datatype='integer' name='Term' ordinal='4' />
            <column datatype='string' name='LoanStatus' ordinal='5' />
            <column datatype='datetime' name='ClosedDate' ordinal='6' />
            <column datatype='real' name='BorrowerAPR' ordinal='7' />
            <column datatype='real' name='BorrowerRate' ordinal='8' />
            <column datatype='real' name='LenderYield' ordinal='9' />
            <column datatype='real' name='EstimatedEffectiveYield' ordinal='10' />
            <column datatype='real' name='EstimatedLoss' ordinal='11' />
            <column datatype='real' name='EstimatedReturn' ordinal='12' />
            <column datatype='integer' name='ProsperRating (numeric)' ordinal='13' />
            <column datatype='string' name='ProsperRating (Alpha)' ordinal='14' />
            <column datatype='real' name='ProsperScore' ordinal='15' />
            <column datatype='integer' name='ListingCategory (numeric)' ordinal='16' />
            <column datatype='string' name='BorrowerState' ordinal='17' />
            <column datatype='string' name='Occupation' ordinal='18' />
            <column datatype='string' name='EmploymentStatus' ordinal='19' />
            <column datatype='integer' name='EmploymentStatusDuration' ordinal='20' />
            <column datatype='boolean' name='IsBorrowerHomeowner' ordinal='21' />
            <column datatype='boolean' name='CurrentlyInGroup' ordinal='22' />
            <column datatype='string' name='GroupKey' ordinal='23' />
            <column datatype='datetime' name='DateCreditPulled' ordinal='24' />
            <column datatype='integer' name='CreditScoreRangeLower' ordinal='25' />
            <column datatype='integer' name='CreditScoreRangeUpper' ordinal='26' />
            <column datatype='datetime' name='FirstRecordedCreditLine' ordinal='27' />
            <column datatype='integer' name='CurrentCreditLines' ordinal='28' />
            <column datatype='integer' name='OpenCreditLines' ordinal='29' />
            <column datatype='integer' name='TotalCreditLinespast7years' ordinal='30' />
            <column datatype='integer' name='OpenRevolvingAccounts' ordinal='31' />
            <column datatype='real' name='OpenRevolvingMonthlyPayment' ordinal='32' />
            <column datatype='integer' name='InquiriesLast6Months' ordinal='33' />
            <column datatype='real' name='TotalInquiries' ordinal='34' />
            <column datatype='integer' name='CurrentDelinquencies' ordinal='35' />
            <column datatype='real' name='AmountDelinquent' ordinal='36' />
            <column datatype='integer' name='DelinquenciesLast7Years' ordinal='37' />
            <column datatype='integer' name='PublicRecordsLast10Years' ordinal='38' />
            <column datatype='integer' name='PublicRecordsLast12Months' ordinal='39' />
            <column datatype='real' name='RevolvingCreditBalance' ordinal='40' />
            <column datatype='real' name='BankcardUtilization' ordinal='41' />
            <column datatype='real' name='AvailableBankcardCredit' ordinal='42' />
            <column datatype='real' name='TotalTrades' ordinal='43' />
            <column datatype='real' name='TradesNeverDelinquent (percentage)' ordinal='44' />
            <column datatype='real' name='TradesOpenedLast6Months' ordinal='45' />
            <column datatype='real' name='DebtToIncomeRatio' ordinal='46' />
            <column datatype='string' name='IncomeRange' ordinal='47' />
            <column datatype='boolean' name='IncomeVerifiable' ordinal='48' />
            <column datatype='real' name='StatedMonthlyIncome' ordinal='49' />
            <column datatype='string' name='LoanKey' ordinal='50' />
            <column datatype='integer' name='TotalProsperLoans' ordinal='51' />
            <column datatype='integer' name='TotalProsperPaymentsBilled' ordinal='52' />
            <column datatype='integer' name='OnTimeProsperPayments' ordinal='53' />
            <column datatype='integer' name='ProsperPaymentsLessThanOneMonthLate' ordinal='54' />
            <column datatype='integer' name='ProsperPaymentsOneMonthPlusLate' ordinal='55' />
            <column datatype='real' name='ProsperPrincipalBorrowed' ordinal='56' />
            <column datatype='real' name='ProsperPrincipalOutstanding' ordinal='57' />
            <column datatype='integer' name='ScorexChangeAtTimeOfListing' ordinal='58' />
            <column datatype='integer' name='LoanCurrentDaysDelinquent' ordinal='59' />
            <column datatype='integer' name='LoanFirstDefaultedCycleNumber' ordinal='60' />
            <column datatype='integer' name='LoanMonthsSinceOrigination' ordinal='61' />
            <column datatype='integer' name='LoanNumber' ordinal='62' />
            <column datatype='integer' name='LoanOriginalAmount' ordinal='63' />
            <column datatype='string' name='LoanOriginationDate' ordinal='64' />
            <column datatype='string' name='LoanOriginationQuarter' ordinal='65' />
            <column datatype='string' name='MemberKey' ordinal='66' />
            <column datatype='real' name='MonthlyLoanPayment' ordinal='67' />
            <column datatype='real' name='LP_CustomerPayments' ordinal='68' />
            <column datatype='real' name='LP_CustomerPrincipalPayments' ordinal='69' />
            <column datatype='real' name='LP_InterestandFees' ordinal='70' />
            <column datatype='real' name='LP_ServiceFees' ordinal='71' />
            <column datatype='real' name='LP_CollectionFees' ordinal='72' />
            <column datatype='real' name='LP_GrossPrincipalLoss' ordinal='73' />
            <column datatype='real' name='LP_NetPrincipalLoss' ordinal='74' />
            <column datatype='real' name='LP_NonPrincipalRecoverypayments' ordinal='75' />
            <column datatype='real' name='PercentFunded' ordinal='76' />
            <column datatype='integer' name='Recommendations' ordinal='77' />
            <column datatype='integer' name='InvestmentFromFriendsCount' ordinal='78' />
            <column datatype='real' name='InvestmentFromFriendsAmount' ordinal='79' />
            <column datatype='integer' name='Investors' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ListingKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ListingKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingKey</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ListingNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingNumber</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingCreationDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ListingCreationDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingCreationDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditGrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreditGrade]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditGrade</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Term</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Term]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Term</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanStatus]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanStatus</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClosedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ClosedDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ClosedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerAPR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BorrowerAPR]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerAPR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BorrowerRate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerRate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LenderYield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LenderYield]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LenderYield</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedEffectiveYield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedEffectiveYield]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedEffectiveYield</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedLoss</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedReturn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedReturn]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedReturn</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperRating (numeric)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperRating (numeric)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperRating (numeric)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperRating (Alpha)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProsperRating (Alpha)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperRating (Alpha)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperScore]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperScore</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingCategory (numeric)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ListingCategory (numeric)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingCategory (numeric)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BorrowerState]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerState</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Occupation]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Occupation</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EmploymentStatus]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EmploymentStatus</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentStatusDuration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EmploymentStatusDuration]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EmploymentStatusDuration</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsBorrowerHomeowner</remote-name>
            <remote-type>11</remote-type>
            <local-name>[IsBorrowerHomeowner]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IsBorrowerHomeowner</remote-alias>
            <ordinal>21</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentlyInGroup</remote-name>
            <remote-type>11</remote-type>
            <local-name>[CurrentlyInGroup]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentlyInGroup</remote-alias>
            <ordinal>22</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroupKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GroupKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>GroupKey</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateCreditPulled</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DateCreditPulled]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DateCreditPulled</remote-alias>
            <ordinal>24</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditScoreRangeLower</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CreditScoreRangeLower]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditScoreRangeLower</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditScoreRangeUpper</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CreditScoreRangeUpper]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditScoreRangeUpper</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FirstRecordedCreditLine</remote-name>
            <remote-type>135</remote-type>
            <local-name>[FirstRecordedCreditLine]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>FirstRecordedCreditLine</remote-alias>
            <ordinal>27</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentCreditLines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CurrentCreditLines]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentCreditLines</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenCreditLines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenCreditLines]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenCreditLines</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCreditLinespast7years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCreditLinespast7years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalCreditLinespast7years</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenRevolvingAccounts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenRevolvingAccounts]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenRevolvingAccounts</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenRevolvingMonthlyPayment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OpenRevolvingMonthlyPayment]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenRevolvingMonthlyPayment</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InquiriesLast6Months</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InquiriesLast6Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InquiriesLast6Months</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalInquiries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalInquiries]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalInquiries</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentDelinquencies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CurrentDelinquencies]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentDelinquencies</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AmountDelinquent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AmountDelinquent]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>AmountDelinquent</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DelinquenciesLast7Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DelinquenciesLast7Years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DelinquenciesLast7Years</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PublicRecordsLast10Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PublicRecordsLast10Years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PublicRecordsLast10Years</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PublicRecordsLast12Months</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PublicRecordsLast12Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PublicRecordsLast12Months</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RevolvingCreditBalance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RevolvingCreditBalance]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>RevolvingCreditBalance</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BankcardUtilization</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BankcardUtilization]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BankcardUtilization</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvailableBankcardCredit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvailableBankcardCredit]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>AvailableBankcardCredit</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTrades</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTrades]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalTrades</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TradesNeverDelinquent (percentage)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TradesNeverDelinquent (percentage)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TradesNeverDelinquent (percentage)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TradesOpenedLast6Months</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TradesOpenedLast6Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TradesOpenedLast6Months</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DebtToIncomeRatio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DebtToIncomeRatio]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DebtToIncomeRatio</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeRange</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IncomeRange]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IncomeRange</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeVerifiable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[IncomeVerifiable]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IncomeVerifiable</remote-alias>
            <ordinal>48</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StatedMonthlyIncome</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StatedMonthlyIncome]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>StatedMonthlyIncome</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanKey</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalProsperLoans</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalProsperLoans]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalProsperLoans</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalProsperPaymentsBilled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalProsperPaymentsBilled]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalProsperPaymentsBilled</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnTimeProsperPayments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnTimeProsperPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OnTimeProsperPayments</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPaymentsLessThanOneMonthLate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperPaymentsLessThanOneMonthLate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPaymentsLessThanOneMonthLate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPaymentsOneMonthPlusLate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperPaymentsOneMonthPlusLate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPaymentsOneMonthPlusLate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPrincipalBorrowed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperPrincipalBorrowed]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPrincipalBorrowed</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPrincipalOutstanding</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperPrincipalOutstanding]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPrincipalOutstanding</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScorexChangeAtTimeOfListing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScorexChangeAtTimeOfListing]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ScorexChangeAtTimeOfListing</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanCurrentDaysDelinquent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanCurrentDaysDelinquent]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanCurrentDaysDelinquent</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanFirstDefaultedCycleNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanFirstDefaultedCycleNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanFirstDefaultedCycleNumber</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanMonthsSinceOrigination</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanMonthsSinceOrigination]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanMonthsSinceOrigination</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanNumber</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginalAmount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanOriginalAmount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginalAmount</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginationDate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanOriginationDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginationDate</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginationQuarter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanOriginationQuarter]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginationQuarter</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MemberKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MemberKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>MemberKey</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthlyLoanPayment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MonthlyLoanPayment]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>MonthlyLoanPayment</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CustomerPayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CustomerPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CustomerPayments</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CustomerPrincipalPayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CustomerPrincipalPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CustomerPrincipalPayments</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_InterestandFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_InterestandFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_InterestandFees</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_ServiceFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_ServiceFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_ServiceFees</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CollectionFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CollectionFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CollectionFees</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_GrossPrincipalLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_GrossPrincipalLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_GrossPrincipalLoss</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_NetPrincipalLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_NetPrincipalLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_NetPrincipalLoss</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_NonPrincipalRecoverypayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_NonPrincipalRecoverypayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_NonPrincipalRecoverypayments</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentFunded</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentFunded]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PercentFunded</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recommendations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recommendations]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Recommendations</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvestmentFromFriendsCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InvestmentFromFriendsCount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InvestmentFromFriendsCount</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvestmentFromFriendsAmount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InvestmentFromFriendsAmount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InvestmentFromFriendsAmount</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Investors]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Investors</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Amount Delinquent' datatype='real' name='[AmountDelinquent]' role='measure' type='quantitative' />
      <column caption='Available Bankcard Credit' datatype='real' name='[AvailableBankcardCredit]' role='measure' type='quantitative' />
      <column caption='Bankcard Utilization' datatype='real' name='[BankcardUtilization]' role='measure' type='quantitative' />
      <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
      <column caption='Borrower Rate' datatype='real' name='[BorrowerRate]' role='measure' type='quantitative' />
      <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Delinquencies' datatype='boolean' name='[Calculation_475129814591930368]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([AmountDelinquent] &gt; 0) AND NOT ISNULL([AmountDelinquent])' />
        <aliases>
          <alias key='false' value='Not Delinquent' />
          <alias key='true' value='Delinquent' />
        </aliases>
      </column>
      <column caption='Liabilities' datatype='boolean' name='[Calculation_475129814592937985]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7) AND NOT ISNULL([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7)' />
        <aliases>
          <alias key='false' value='Low Liability' />
          <alias key='true' value='High Liability' />
        </aliases>
      </column>
      <column caption='Closed Date' datatype='datetime' name='[ClosedDate]' role='dimension' type='ordinal' />
      <column caption='Credit Grade' datatype='string' name='[CreditGrade]' role='dimension' type='nominal' />
      <column caption='Credit Score Range Lower' datatype='integer' name='[CreditScoreRangeLower]' role='measure' type='quantitative' />
      <column caption='Credit Score Range Upper' datatype='integer' name='[CreditScoreRangeUpper]' role='measure' type='quantitative' />
      <column caption='Current Credit Lines' datatype='integer' name='[CurrentCreditLines]' role='measure' type='quantitative' />
      <column caption='Current Delinquencies' datatype='integer' name='[CurrentDelinquencies]' role='measure' type='quantitative' />
      <column caption='Currently In Group' datatype='boolean' name='[CurrentlyInGroup]' role='dimension' type='nominal' />
      <column caption='Date Credit Pulled' datatype='datetime' name='[DateCreditPulled]' role='dimension' type='ordinal' />
      <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
      <column caption='Employment Status Duration' datatype='integer' name='[EmploymentStatusDuration]' role='measure' type='quantitative' />
      <column caption='Employment Status' datatype='string' name='[EmploymentStatus]' role='dimension' type='nominal' />
      <column caption='Estimated Effective Yield' datatype='real' name='[EstimatedEffectiveYield]' role='measure' type='quantitative' />
      <column caption='Estimated Loss' datatype='real' name='[EstimatedLoss]' role='measure' type='quantitative' />
      <column caption='Estimated Return' datatype='real' name='[EstimatedReturn]' role='measure' type='quantitative' />
      <column caption='First Recorded Credit Line' datatype='datetime' name='[FirstRecordedCreditLine]' role='dimension' type='ordinal' />
      <column caption='Group Key' datatype='string' name='[GroupKey]' role='dimension' type='nominal' />
      <column caption='Income Range' datatype='string' name='[IncomeRange]' role='dimension' type='nominal' />
      <column caption='Income Verifiable' datatype='boolean' name='[IncomeVerifiable]' role='dimension' type='nominal' />
      <column caption='Investment From Friends Amount' datatype='real' name='[InvestmentFromFriendsAmount]' role='measure' type='quantitative' />
      <column caption='Investment From Friends Count' datatype='integer' name='[InvestmentFromFriendsCount]' role='measure' type='quantitative' />
      <column caption='Is Borrower Homeowner' datatype='boolean' name='[IsBorrowerHomeowner]' role='dimension' type='nominal' />
      <column caption='LP CollectionFees' datatype='real' name='[LP_CollectionFees]' role='measure' type='quantitative' />
      <column caption='LP CustomerPayments' datatype='real' name='[LP_CustomerPayments]' role='measure' type='quantitative' />
      <column caption='LP CustomerPrincipalPayments' datatype='real' name='[LP_CustomerPrincipalPayments]' role='measure' type='quantitative' />
      <column caption='LP GrossPrincipalLoss' datatype='real' name='[LP_GrossPrincipalLoss]' role='measure' type='quantitative' />
      <column caption='LP InterestandFees' datatype='real' name='[LP_InterestandFees]' role='measure' type='quantitative' />
      <column caption='LP NetPrincipalLoss' datatype='real' name='[LP_NetPrincipalLoss]' role='measure' type='quantitative' />
      <column caption='LP NonPrincipalRecoverypayments' datatype='real' name='[LP_NonPrincipalRecoverypayments]' role='measure' type='quantitative' />
      <column caption='LP ServiceFees' datatype='real' name='[LP_ServiceFees]' role='measure' type='quantitative' />
      <column caption='Lender Yield' datatype='real' name='[LenderYield]' role='measure' type='quantitative' />
      <column caption='Listing Creation Date' datatype='datetime' name='[ListingCreationDate]' role='dimension' type='ordinal' />
      <column caption='Listing Key' datatype='string' name='[ListingKey]' role='dimension' type='nominal' />
      <column caption='Listing Number' datatype='integer' name='[ListingNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Current Days Delinquent' datatype='integer' name='[LoanCurrentDaysDelinquent]' role='measure' type='quantitative' />
      <column caption='Loan First Defaulted Cycle Number' datatype='integer' name='[LoanFirstDefaultedCycleNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Key' datatype='string' name='[LoanKey]' role='dimension' type='nominal' />
      <column caption='Loan Months Since Origination' datatype='integer' name='[LoanMonthsSinceOrigination]' role='measure' type='quantitative' />
      <column caption='Loan Number' datatype='integer' name='[LoanNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
      <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
        <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
      </column>
      <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
      <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
      <column caption='Loan Status' datatype='string' name='[LoanStatus]' role='dimension' type='nominal' />
      <column caption='Member Key' datatype='string' name='[MemberKey]' role='dimension' type='nominal' />
      <column caption='Monthly Loan Payment' datatype='real' name='[MonthlyLoanPayment]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='On Time Prosper Payments' datatype='integer' name='[OnTimeProsperPayments]' role='measure' type='quantitative' />
      <column caption='Open Credit Lines' datatype='integer' name='[OpenCreditLines]' role='measure' type='quantitative' />
      <column caption='Open Revolving Accounts' datatype='integer' name='[OpenRevolvingAccounts]' role='measure' type='quantitative' />
      <column caption='Open Revolving Monthly Payment' datatype='real' name='[OpenRevolvingMonthlyPayment]' role='measure' type='quantitative' />
      <column caption='Percent Funded' datatype='real' name='[PercentFunded]' role='measure' type='quantitative' />
      <column caption='Prosper Payments Less Than One Month Late' datatype='integer' name='[ProsperPaymentsLessThanOneMonthLate]' role='measure' type='quantitative' />
      <column caption='Prosper Payments One Month Plus Late' datatype='integer' name='[ProsperPaymentsOneMonthPlusLate]' role='measure' type='quantitative' />
      <column caption='Prosper Principal Borrowed' datatype='real' name='[ProsperPrincipalBorrowed]' role='measure' type='quantitative' />
      <column caption='Prosper Principal Outstanding' datatype='real' name='[ProsperPrincipalOutstanding]' role='measure' type='quantitative' />
      <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
      <column caption='Prosper Score' datatype='real' name='[ProsperScore]' role='measure' type='quantitative' />
      <column caption='Revolving Credit Balance' datatype='real' name='[RevolvingCreditBalance]' role='measure' type='quantitative' />
      <column caption='Scorex Change At Time Of Listing' datatype='integer' name='[ScorexChangeAtTimeOfListing]' role='measure' type='quantitative' />
      <column caption='Stated Monthly Income' datatype='real' name='[StatedMonthlyIncome]' role='measure' type='quantitative' />
      <column caption='Total Inquiries' datatype='real' name='[TotalInquiries]' role='measure' type='quantitative' />
      <column caption='Total Prosper Loans' datatype='integer' name='[TotalProsperLoans]' role='measure' type='quantitative' />
      <column caption='Total Prosper Payments Billed' datatype='integer' name='[TotalProsperPaymentsBilled]' role='measure' type='quantitative' />
      <column caption='Total Trades' datatype='real' name='[TotalTrades]' role='measure' type='quantitative' />
      <column-instance column='[AmountDelinquent]' derivation='Avg' name='[avg:AmountDelinquent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BankcardUtilization]' derivation='Avg' name='[avg:BankcardUtilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BorrowerRate]' derivation='Avg' name='[avg:BorrowerRate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CurrentDelinquencies]' derivation='Avg' name='[avg:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedLoss]' derivation='Avg' name='[avg:EstimatedLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LP_NetPrincipalLoss]' derivation='Avg' name='[avg:LP_NetPrincipalLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LenderYield]' derivation='Avg' name='[avg:LenderYield:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EmploymentStatus]' derivation='None' name='[none:EmploymentStatus:nk]' pivot='key' type='nominal' />
      <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
      <column-instance column='[AmountDelinquent]' derivation='Sum' name='[sum:AmountDelinquent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BankcardUtilization]' derivation='Sum' name='[sum:BankcardUtilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CurrentDelinquencies]' derivation='Sum' name='[sum:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DebtToIncomeRatio]' derivation='Sum' name='[sum:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedLoss]' derivation='Sum' name='[sum:EstimatedLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LP_NetPrincipalLoss]' derivation='Sum' name='[sum:LP_NetPrincipalLoss:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.561644' measure-ordering='alphabetic' measure-percentage='0.438356' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:EmploymentStatus:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not employed&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Not available&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Self-employed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Part-time&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Full-time&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Employed&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Retired&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:AmountDelinquent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LP_NetPrincipalLoss:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:AmountDelinquent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LP_NetPrincipalLoss:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:CurrentDelinquencies:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:DebtToIncomeRatio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:EstimatedLoss:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:EstimatedLoss:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BankcardUtilization:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:BankcardUtilization:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LenderYield:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ProsperRating (Alpha):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
      <datasources>
        <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
      </datasources>
      <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
        <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
          <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
        </column>
        <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
        <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
        <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]'>
        <groupfilter function='level-members' level='[none:LoanOriginationQuarter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' />
      </filter>
      <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]'>
        <groupfilter function='level-members' level='[yr:LoanOriginationDate - Split 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Credit Risk 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Current Delinquencies' datatype='integer' name='[CurrentDelinquencies]' role='measure' type='quantitative' />
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[CurrentDelinquencies]' derivation='Avg' name='[avg:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year-Trunc' name='[tyr:LoanOriginationDate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='Loan Date' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk] + [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk])</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Credit Risk 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Amount Delinquent' datatype='real' name='[AmountDelinquent]' role='measure' type='quantitative' />
            <column caption='Delinquencies' datatype='boolean' name='[Calculation_475129814591930368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([AmountDelinquent] &gt; 0) AND NOT ISNULL([AmountDelinquent])' />
              <aliases>
                <alias key='false' value='Not Delinquent' />
                <alias key='true' value='Delinquent' />
              </aliases>
            </column>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[PublicRecordsLast10Years]' role='measure' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PublicRecordsLast10Years]' derivation='Avg' name='[avg:PublicRecordsLast10Years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_475129814591930368]' derivation='None' name='[none:Calculation_475129814591930368:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
            <groupfilter from='&quot;A&quot;' function='range' level='[none:ProsperRating (Alpha):nk]' to='&quot;HR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:PublicRecordsLast10Years:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814591930368:nk] / [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Credit Risk 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Available Bankcard Credit' datatype='real' name='[AvailableBankcardCredit]' role='measure' type='quantitative' />
            <column caption='Bankcard Utilization' datatype='real' name='[BankcardUtilization]' role='measure' type='quantitative' />
            <column caption='Liabilities' datatype='boolean' name='[Calculation_475129814592937985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7) AND NOT ISNULL([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7)' />
              <aliases>
                <alias key='false' value='Low Liability' />
                <alias key='true' value='High Liability' />
              </aliases>
            </column>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column caption='Revolving Credit Balance' datatype='real' name='[RevolvingCreditBalance]' role='measure' type='quantitative' />
            <column-instance column='[BankcardUtilization]' derivation='Avg' name='[avg:BankcardUtilization:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_475129814592937985]' derivation='None' name='[none:Calculation_475129814592937985:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
            <groupfilter from='&quot;A&quot;' function='range' level='[none:ProsperRating (Alpha):nk]' to='&quot;HR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BankcardUtilization:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814592937985:nk] / [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Employment Status' datatype='string' name='[EmploymentStatus]' role='dimension' type='nominal' />
            <column caption='Income Range' datatype='string' name='[IncomeRange]' role='dimension' type='nominal' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[EmploymentStatus]' derivation='None' name='[none:EmploymentStatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[IncomeRange]' derivation='None' name='[none:IncomeRange:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
            <groupfilter function='level-members' level='[none:ProsperRating (Alpha):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='Count' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:IncomeRange:nk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerState]' derivation='None' name='[none:BorrowerState:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' max='1500' min='0' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
              <size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:BorrowerState:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Latitude (generated)]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerState]' derivation='None' name='[none:BorrowerState:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginalAmount]' derivation='Sum' name='[sum:LoanOriginalAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:BorrowerState:nk]' />
              <geometry column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Latitude (generated)]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
            <column caption='Borrower Rate' datatype='real' name='[BorrowerRate]' role='measure' type='quantitative' />
            <column caption='Lender Yield' datatype='real' name='[LenderYield]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BorrowerRate]' derivation='Avg' name='[avg:BorrowerRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LenderYield]' derivation='Avg' name='[avg:LenderYield:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year-Trunc' name='[tyr:LoanOriginationDate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LenderYield:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='Average Borrower Rate Comparison' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='Loan Date' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk] + [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values])</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='LP InterestandFees' datatype='real' name='[LP_InterestandFees]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LP_InterestandFees]' derivation='Sum' name='[pcto:sum:LP_InterestandFees:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[LP_InterestandFees]' derivation='Sum' name='[sum:LP_InterestandFees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ProsperRating (Alpha):nk]' />
              <groupfilter function='member' level='[none:ProsperRating (Alpha):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='496' />
            <format attr='cell-h' value='496' />
            <format attr='cell' value='62' />
            <format attr='cell-q' value='310' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <wedge-size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LP_InterestandFees:qk]' />
              <size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:LP_InterestandFees:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
            <column caption='Estimated Return' datatype='real' name='[EstimatedReturn]' role='measure' type='quantitative' />
            <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[EstimatedReturn]' derivation='Avg' name='[pcto:avg:EstimatedReturn:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[LoanOriginalAmount]' derivation='Sum' name='[sum:LoanOriginalAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ProsperRating (Alpha):nk]' />
              <groupfilter function='member' level='[none:ProsperRating (Alpha):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <shape column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:avg:EstimatedReturn:qk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Customer Quality 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:CreditGrade:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:IncomeRange:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Credit Risk 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Credit Risk 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814591930368:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Credit Risk 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814592937985:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Credit Risk 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Credit Risk 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Credit Risk 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 1' width='192'>
      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
      MiV2MB14nQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 3' width='192'>
      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
      cHH+3Gl02X8WZSqvACjT4JvBcWq8bjZjCQ53nWB7aw27SrO2FsXjcjAyNkXvsY6njbHyvaz6
      SU+eUtZ40pAqn0PD5VKjHOazlDXyWwE0nQtvnmPy4UMaq6u49fUV/PUBjrVV49lMszY3gabp
      0hjrBcqlLxCUfj5LWaOg3xGWyaTRddvBb4x1gAJQDvNZyhoFvaHVZvt+OTl5JsqdXOEmLE0C
      ICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAs
      TQIgLE0CICxNAiAsTQIgLC2/tihKMTkxzGooQf/JY9wfuk9T+xEiyws0dnSR2I5w+EhHocYq
      RMHl1RVCKUUsFmX41m10n4/2w8cZvXMVh6+aRDyK013FwMAZPE7b075A+bbwKERniXxrPOnD
      k8+XhhSqRr5dIcphPktZI++uEKPDg9R0HkePraLbdJy+alobang0k8KpDB6MjHH2dO/TJk75
      dmEphxpPHlsONQrxWko9n6WskWcAFEbKILQ8S9fRowzfvUHz4WPUVOj0VAVYnHpAoLnl6adc
      IZo4maZZFjUgv75A2uO+SaWuUS7zWaoaBW2M9WOkMdZ3pDFWedSQo0DC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIK
      9k3xyZ0tbgzeo7Gtne3V5d2uEJEwx453FeophCi4gq0AwbkgPf3nWJmZYCeZYvT+IAsrq4Sj
      yUI9hRAFV7AAaJoinUljc/vp7erA7fRS6XLwcGy8UE8hRMEVLADtnUeYGr1Ha2cXHq+H3lOn
      sdkVbR2dhXoKIQquKF0hnjzFfm6g9KxyaWoljbHyr1GwneBcnm3g9OTNk0+tUtd4Euh8axRi
      HIWoUer5LGWNogSgkI2xyqHGQVoBymE+S1mjqI2xhCg3RT8RZpoZzJfInFLm099/0pEtH3ut
      YWZ2x6FMk8wel+onn9i7jYL3vtw/ncPHDYf3Ppbd+d3r63laK5PB3NPH6Hfj33ONZzZ7ctb4
      we+px/Nn++Uvf/nLPTztnpipKJe//IqZqUXSoSXG1+LUO2L882d36T3eifbD388Y3Lp+nfsj
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
