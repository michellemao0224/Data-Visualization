<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='prosperLoanData' inline='true' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='prosperLoanData' name='textscan.1q5b03d1val7gq1g5v2tj03glt7l'>
            <connection class='textscan' directory='/Users/Miyal/Desktop/Udacity/Data Visualization/Project' filename='prosperLoanData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1q5b03d1val7gq1g5v2tj03glt7l' name='prosperLoanData.csv' table='[prosperLoanData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='string' name='ListingKey' ordinal='0' />
            <column datatype='integer' name='ListingNumber' ordinal='1' />
            <column datatype='datetime' name='ListingCreationDate' ordinal='2' />
            <column datatype='string' name='CreditGrade' ordinal='3' />
            <column datatype='integer' name='Term' ordinal='4' />
            <column datatype='string' name='LoanStatus' ordinal='5' />
            <column datatype='datetime' name='ClosedDate' ordinal='6' />
            <column datatype='real' name='BorrowerAPR' ordinal='7' />
            <column datatype='real' name='BorrowerRate' ordinal='8' />
            <column datatype='real' name='LenderYield' ordinal='9' />
            <column datatype='real' name='EstimatedEffectiveYield' ordinal='10' />
            <column datatype='real' name='EstimatedLoss' ordinal='11' />
            <column datatype='real' name='EstimatedReturn' ordinal='12' />
            <column datatype='integer' name='ProsperRating (numeric)' ordinal='13' />
            <column datatype='string' name='ProsperRating (Alpha)' ordinal='14' />
            <column datatype='real' name='ProsperScore' ordinal='15' />
            <column datatype='integer' name='ListingCategory (numeric)' ordinal='16' />
            <column datatype='string' name='BorrowerState' ordinal='17' />
            <column datatype='string' name='Occupation' ordinal='18' />
            <column datatype='string' name='EmploymentStatus' ordinal='19' />
            <column datatype='integer' name='EmploymentStatusDuration' ordinal='20' />
            <column datatype='boolean' name='IsBorrowerHomeowner' ordinal='21' />
            <column datatype='boolean' name='CurrentlyInGroup' ordinal='22' />
            <column datatype='string' name='GroupKey' ordinal='23' />
            <column datatype='datetime' name='DateCreditPulled' ordinal='24' />
            <column datatype='integer' name='CreditScoreRangeLower' ordinal='25' />
            <column datatype='integer' name='CreditScoreRangeUpper' ordinal='26' />
            <column datatype='datetime' name='FirstRecordedCreditLine' ordinal='27' />
            <column datatype='integer' name='CurrentCreditLines' ordinal='28' />
            <column datatype='integer' name='OpenCreditLines' ordinal='29' />
            <column datatype='integer' name='TotalCreditLinespast7years' ordinal='30' />
            <column datatype='integer' name='OpenRevolvingAccounts' ordinal='31' />
            <column datatype='real' name='OpenRevolvingMonthlyPayment' ordinal='32' />
            <column datatype='integer' name='InquiriesLast6Months' ordinal='33' />
            <column datatype='real' name='TotalInquiries' ordinal='34' />
            <column datatype='integer' name='CurrentDelinquencies' ordinal='35' />
            <column datatype='real' name='AmountDelinquent' ordinal='36' />
            <column datatype='integer' name='DelinquenciesLast7Years' ordinal='37' />
            <column datatype='integer' name='PublicRecordsLast10Years' ordinal='38' />
            <column datatype='integer' name='PublicRecordsLast12Months' ordinal='39' />
            <column datatype='real' name='RevolvingCreditBalance' ordinal='40' />
            <column datatype='real' name='BankcardUtilization' ordinal='41' />
            <column datatype='real' name='AvailableBankcardCredit' ordinal='42' />
            <column datatype='real' name='TotalTrades' ordinal='43' />
            <column datatype='real' name='TradesNeverDelinquent (percentage)' ordinal='44' />
            <column datatype='real' name='TradesOpenedLast6Months' ordinal='45' />
            <column datatype='real' name='DebtToIncomeRatio' ordinal='46' />
            <column datatype='string' name='IncomeRange' ordinal='47' />
            <column datatype='boolean' name='IncomeVerifiable' ordinal='48' />
            <column datatype='real' name='StatedMonthlyIncome' ordinal='49' />
            <column datatype='string' name='LoanKey' ordinal='50' />
            <column datatype='integer' name='TotalProsperLoans' ordinal='51' />
            <column datatype='integer' name='TotalProsperPaymentsBilled' ordinal='52' />
            <column datatype='integer' name='OnTimeProsperPayments' ordinal='53' />
            <column datatype='integer' name='ProsperPaymentsLessThanOneMonthLate' ordinal='54' />
            <column datatype='integer' name='ProsperPaymentsOneMonthPlusLate' ordinal='55' />
            <column datatype='real' name='ProsperPrincipalBorrowed' ordinal='56' />
            <column datatype='real' name='ProsperPrincipalOutstanding' ordinal='57' />
            <column datatype='integer' name='ScorexChangeAtTimeOfListing' ordinal='58' />
            <column datatype='integer' name='LoanCurrentDaysDelinquent' ordinal='59' />
            <column datatype='integer' name='LoanFirstDefaultedCycleNumber' ordinal='60' />
            <column datatype='integer' name='LoanMonthsSinceOrigination' ordinal='61' />
            <column datatype='integer' name='LoanNumber' ordinal='62' />
            <column datatype='integer' name='LoanOriginalAmount' ordinal='63' />
            <column datatype='string' name='LoanOriginationDate' ordinal='64' />
            <column datatype='string' name='LoanOriginationQuarter' ordinal='65' />
            <column datatype='string' name='MemberKey' ordinal='66' />
            <column datatype='real' name='MonthlyLoanPayment' ordinal='67' />
            <column datatype='real' name='LP_CustomerPayments' ordinal='68' />
            <column datatype='real' name='LP_CustomerPrincipalPayments' ordinal='69' />
            <column datatype='real' name='LP_InterestandFees' ordinal='70' />
            <column datatype='real' name='LP_ServiceFees' ordinal='71' />
            <column datatype='real' name='LP_CollectionFees' ordinal='72' />
            <column datatype='real' name='LP_GrossPrincipalLoss' ordinal='73' />
            <column datatype='real' name='LP_NetPrincipalLoss' ordinal='74' />
            <column datatype='real' name='LP_NonPrincipalRecoverypayments' ordinal='75' />
            <column datatype='real' name='PercentFunded' ordinal='76' />
            <column datatype='integer' name='Recommendations' ordinal='77' />
            <column datatype='integer' name='InvestmentFromFriendsCount' ordinal='78' />
            <column datatype='real' name='InvestmentFromFriendsAmount' ordinal='79' />
            <column datatype='integer' name='Investors' ordinal='80' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ListingKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ListingKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingKey</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ListingNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingNumber</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingCreationDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ListingCreationDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingCreationDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditGrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CreditGrade]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditGrade</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Term</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Term]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Term</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanStatus]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanStatus</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ClosedDate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[ClosedDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ClosedDate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerAPR</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BorrowerAPR]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerAPR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerRate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BorrowerRate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerRate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LenderYield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LenderYield]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LenderYield</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedEffectiveYield</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedEffectiveYield]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedEffectiveYield</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedLoss</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstimatedReturn</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EstimatedReturn]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EstimatedReturn</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperRating (numeric)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperRating (numeric)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperRating (numeric)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperRating (Alpha)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ProsperRating (Alpha)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperRating (Alpha)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperScore</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperScore]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperScore</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ListingCategory (numeric)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ListingCategory (numeric)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ListingCategory (numeric)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BorrowerState</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BorrowerState]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BorrowerState</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Occupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Occupation]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Occupation</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentStatus</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EmploymentStatus]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EmploymentStatus</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmploymentStatusDuration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EmploymentStatusDuration]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>EmploymentStatusDuration</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IsBorrowerHomeowner</remote-name>
            <remote-type>11</remote-type>
            <local-name>[IsBorrowerHomeowner]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IsBorrowerHomeowner</remote-alias>
            <ordinal>21</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentlyInGroup</remote-name>
            <remote-type>11</remote-type>
            <local-name>[CurrentlyInGroup]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentlyInGroup</remote-alias>
            <ordinal>22</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GroupKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GroupKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>GroupKey</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateCreditPulled</remote-name>
            <remote-type>135</remote-type>
            <local-name>[DateCreditPulled]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DateCreditPulled</remote-alias>
            <ordinal>24</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditScoreRangeLower</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CreditScoreRangeLower]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditScoreRangeLower</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CreditScoreRangeUpper</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CreditScoreRangeUpper]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CreditScoreRangeUpper</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FirstRecordedCreditLine</remote-name>
            <remote-type>135</remote-type>
            <local-name>[FirstRecordedCreditLine]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>FirstRecordedCreditLine</remote-alias>
            <ordinal>27</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentCreditLines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CurrentCreditLines]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentCreditLines</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenCreditLines</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenCreditLines]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenCreditLines</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalCreditLinespast7years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalCreditLinespast7years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalCreditLinespast7years</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenRevolvingAccounts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OpenRevolvingAccounts]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenRevolvingAccounts</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OpenRevolvingMonthlyPayment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OpenRevolvingMonthlyPayment]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OpenRevolvingMonthlyPayment</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InquiriesLast6Months</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InquiriesLast6Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InquiriesLast6Months</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalInquiries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalInquiries]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalInquiries</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CurrentDelinquencies</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CurrentDelinquencies]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>CurrentDelinquencies</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AmountDelinquent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AmountDelinquent]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>AmountDelinquent</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DelinquenciesLast7Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DelinquenciesLast7Years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DelinquenciesLast7Years</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PublicRecordsLast10Years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PublicRecordsLast10Years]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PublicRecordsLast10Years</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PublicRecordsLast12Months</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PublicRecordsLast12Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PublicRecordsLast12Months</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RevolvingCreditBalance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RevolvingCreditBalance]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>RevolvingCreditBalance</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BankcardUtilization</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BankcardUtilization]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>BankcardUtilization</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AvailableBankcardCredit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AvailableBankcardCredit]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>AvailableBankcardCredit</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalTrades</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TotalTrades]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalTrades</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TradesNeverDelinquent (percentage)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TradesNeverDelinquent (percentage)]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TradesNeverDelinquent (percentage)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TradesOpenedLast6Months</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TradesOpenedLast6Months]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TradesOpenedLast6Months</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DebtToIncomeRatio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DebtToIncomeRatio]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>DebtToIncomeRatio</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeRange</remote-name>
            <remote-type>129</remote-type>
            <local-name>[IncomeRange]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IncomeRange</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IncomeVerifiable</remote-name>
            <remote-type>11</remote-type>
            <local-name>[IncomeVerifiable]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>IncomeVerifiable</remote-alias>
            <ordinal>48</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StatedMonthlyIncome</remote-name>
            <remote-type>5</remote-type>
            <local-name>[StatedMonthlyIncome]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>StatedMonthlyIncome</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanKey</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalProsperLoans</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalProsperLoans]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalProsperLoans</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalProsperPaymentsBilled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalProsperPaymentsBilled]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>TotalProsperPaymentsBilled</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OnTimeProsperPayments</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OnTimeProsperPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>OnTimeProsperPayments</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPaymentsLessThanOneMonthLate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperPaymentsLessThanOneMonthLate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPaymentsLessThanOneMonthLate</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPaymentsOneMonthPlusLate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ProsperPaymentsOneMonthPlusLate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPaymentsOneMonthPlusLate</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPrincipalBorrowed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperPrincipalBorrowed]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPrincipalBorrowed</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProsperPrincipalOutstanding</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ProsperPrincipalOutstanding]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ProsperPrincipalOutstanding</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ScorexChangeAtTimeOfListing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ScorexChangeAtTimeOfListing]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>ScorexChangeAtTimeOfListing</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanCurrentDaysDelinquent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanCurrentDaysDelinquent]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanCurrentDaysDelinquent</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanFirstDefaultedCycleNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanFirstDefaultedCycleNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanFirstDefaultedCycleNumber</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanMonthsSinceOrigination</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanMonthsSinceOrigination]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanMonthsSinceOrigination</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanNumber]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanNumber</remote-alias>
            <ordinal>62</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginalAmount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LoanOriginalAmount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginalAmount</remote-alias>
            <ordinal>63</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginationDate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanOriginationDate]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginationDate</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LoanOriginationQuarter</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LoanOriginationQuarter]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LoanOriginationQuarter</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MemberKey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MemberKey]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>MemberKey</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MonthlyLoanPayment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[MonthlyLoanPayment]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>MonthlyLoanPayment</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CustomerPayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CustomerPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CustomerPayments</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CustomerPrincipalPayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CustomerPrincipalPayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CustomerPrincipalPayments</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_InterestandFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_InterestandFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_InterestandFees</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_ServiceFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_ServiceFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_ServiceFees</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_CollectionFees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_CollectionFees]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_CollectionFees</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_GrossPrincipalLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_GrossPrincipalLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_GrossPrincipalLoss</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_NetPrincipalLoss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_NetPrincipalLoss]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_NetPrincipalLoss</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LP_NonPrincipalRecoverypayments</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LP_NonPrincipalRecoverypayments]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>LP_NonPrincipalRecoverypayments</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentFunded</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentFunded]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>PercentFunded</remote-alias>
            <ordinal>76</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recommendations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recommendations]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Recommendations</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvestmentFromFriendsCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[InvestmentFromFriendsCount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InvestmentFromFriendsCount</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InvestmentFromFriendsAmount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InvestmentFromFriendsAmount]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>InvestmentFromFriendsAmount</remote-alias>
            <ordinal>79</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investors</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Investors]</local-name>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias>Investors</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[prosperLoanData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Amount Delinquent' datatype='real' name='[AmountDelinquent]' role='measure' type='quantitative' />
      <column caption='Available Bankcard Credit' datatype='real' name='[AvailableBankcardCredit]' role='measure' type='quantitative' />
      <column caption='Bankcard Utilization' datatype='real' name='[BankcardUtilization]' role='measure' type='quantitative' />
      <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
      <column caption='Borrower Rate' datatype='real' name='[BorrowerRate]' role='measure' type='quantitative' />
      <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Delinquencies' datatype='boolean' name='[Calculation_475129814591930368]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([AmountDelinquent] &gt; 0) AND NOT ISNULL([AmountDelinquent])' />
        <aliases>
          <alias key='false' value='Not Delinquent' />
          <alias key='true' value='Delinquent' />
        </aliases>
      </column>
      <column caption='Liabilities' datatype='boolean' name='[Calculation_475129814592937985]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7) AND NOT ISNULL([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7)' />
        <aliases>
          <alias key='false' value='Low Liability' />
          <alias key='true' value='High Liability' />
        </aliases>
      </column>
      <column caption='Closed Date' datatype='datetime' name='[ClosedDate]' role='dimension' type='ordinal' />
      <column caption='Credit Grade' datatype='string' name='[CreditGrade]' role='dimension' type='nominal' />
      <column caption='Credit Score Range Lower' datatype='integer' name='[CreditScoreRangeLower]' role='measure' type='quantitative' />
      <column caption='Credit Score Range Upper' datatype='integer' name='[CreditScoreRangeUpper]' role='measure' type='quantitative' />
      <column caption='Current Credit Lines' datatype='integer' name='[CurrentCreditLines]' role='measure' type='quantitative' />
      <column caption='Current Delinquencies' datatype='integer' name='[CurrentDelinquencies]' role='measure' type='quantitative' />
      <column caption='Currently In Group' datatype='boolean' name='[CurrentlyInGroup]' role='dimension' type='nominal' />
      <column caption='Date Credit Pulled' datatype='datetime' name='[DateCreditPulled]' role='dimension' type='ordinal' />
      <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
      <column caption='Employment Status Duration' datatype='integer' name='[EmploymentStatusDuration]' role='measure' type='quantitative' />
      <column caption='Employment Status' datatype='string' name='[EmploymentStatus]' role='dimension' type='nominal' />
      <column caption='Estimated Effective Yield' datatype='real' name='[EstimatedEffectiveYield]' role='measure' type='quantitative' />
      <column caption='Estimated Loss' datatype='real' name='[EstimatedLoss]' role='measure' type='quantitative' />
      <column caption='Estimated Return' datatype='real' name='[EstimatedReturn]' role='measure' type='quantitative' />
      <column caption='First Recorded Credit Line' datatype='datetime' name='[FirstRecordedCreditLine]' role='dimension' type='ordinal' />
      <column caption='Group Key' datatype='string' name='[GroupKey]' role='dimension' type='nominal' />
      <column caption='Income Range' datatype='string' name='[IncomeRange]' role='dimension' type='nominal' />
      <column caption='Income Verifiable' datatype='boolean' name='[IncomeVerifiable]' role='dimension' type='nominal' />
      <column caption='Investment From Friends Amount' datatype='real' name='[InvestmentFromFriendsAmount]' role='measure' type='quantitative' />
      <column caption='Investment From Friends Count' datatype='integer' name='[InvestmentFromFriendsCount]' role='measure' type='quantitative' />
      <column caption='Is Borrower Homeowner' datatype='boolean' name='[IsBorrowerHomeowner]' role='dimension' type='nominal' />
      <column caption='LP CollectionFees' datatype='real' name='[LP_CollectionFees]' role='measure' type='quantitative' />
      <column caption='LP CustomerPayments' datatype='real' name='[LP_CustomerPayments]' role='measure' type='quantitative' />
      <column caption='LP CustomerPrincipalPayments' datatype='real' name='[LP_CustomerPrincipalPayments]' role='measure' type='quantitative' />
      <column caption='LP GrossPrincipalLoss' datatype='real' name='[LP_GrossPrincipalLoss]' role='measure' type='quantitative' />
      <column caption='LP InterestandFees' datatype='real' name='[LP_InterestandFees]' role='measure' type='quantitative' />
      <column caption='LP NetPrincipalLoss' datatype='real' name='[LP_NetPrincipalLoss]' role='measure' type='quantitative' />
      <column caption='LP NonPrincipalRecoverypayments' datatype='real' name='[LP_NonPrincipalRecoverypayments]' role='measure' type='quantitative' />
      <column caption='LP ServiceFees' datatype='real' name='[LP_ServiceFees]' role='measure' type='quantitative' />
      <column caption='Lender Yield' datatype='real' name='[LenderYield]' role='measure' type='quantitative' />
      <column caption='Listing Creation Date' datatype='datetime' name='[ListingCreationDate]' role='dimension' type='ordinal' />
      <column caption='Listing Key' datatype='string' name='[ListingKey]' role='dimension' type='nominal' />
      <column caption='Listing Number' datatype='integer' name='[ListingNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Current Days Delinquent' datatype='integer' name='[LoanCurrentDaysDelinquent]' role='measure' type='quantitative' />
      <column caption='Loan First Defaulted Cycle Number' datatype='integer' name='[LoanFirstDefaultedCycleNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Key' datatype='string' name='[LoanKey]' role='dimension' type='nominal' />
      <column caption='Loan Months Since Origination' datatype='integer' name='[LoanMonthsSinceOrigination]' role='measure' type='quantitative' />
      <column caption='Loan Number' datatype='integer' name='[LoanNumber]' role='dimension' type='ordinal' />
      <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
      <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
        <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
      </column>
      <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
      <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
      <column caption='Loan Status' datatype='string' name='[LoanStatus]' role='dimension' type='nominal' />
      <column caption='Member Key' datatype='string' name='[MemberKey]' role='dimension' type='nominal' />
      <column caption='Monthly Loan Payment' datatype='real' name='[MonthlyLoanPayment]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='On Time Prosper Payments' datatype='integer' name='[OnTimeProsperPayments]' role='measure' type='quantitative' />
      <column caption='Open Credit Lines' datatype='integer' name='[OpenCreditLines]' role='measure' type='quantitative' />
      <column caption='Open Revolving Accounts' datatype='integer' name='[OpenRevolvingAccounts]' role='measure' type='quantitative' />
      <column caption='Open Revolving Monthly Payment' datatype='real' name='[OpenRevolvingMonthlyPayment]' role='measure' type='quantitative' />
      <column caption='Percent Funded' datatype='real' name='[PercentFunded]' role='measure' type='quantitative' />
      <column caption='Prosper Payments Less Than One Month Late' datatype='integer' name='[ProsperPaymentsLessThanOneMonthLate]' role='measure' type='quantitative' />
      <column caption='Prosper Payments One Month Plus Late' datatype='integer' name='[ProsperPaymentsOneMonthPlusLate]' role='measure' type='quantitative' />
      <column caption='Prosper Principal Borrowed' datatype='real' name='[ProsperPrincipalBorrowed]' role='measure' type='quantitative' />
      <column caption='Prosper Principal Outstanding' datatype='real' name='[ProsperPrincipalOutstanding]' role='measure' type='quantitative' />
      <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
      <column caption='Prosper Score' datatype='real' name='[ProsperScore]' role='measure' type='quantitative' />
      <column caption='Revolving Credit Balance' datatype='real' name='[RevolvingCreditBalance]' role='measure' type='quantitative' />
      <column caption='Scorex Change At Time Of Listing' datatype='integer' name='[ScorexChangeAtTimeOfListing]' role='measure' type='quantitative' />
      <column caption='Stated Monthly Income' datatype='real' name='[StatedMonthlyIncome]' role='measure' type='quantitative' />
      <column caption='Total Inquiries' datatype='real' name='[TotalInquiries]' role='measure' type='quantitative' />
      <column caption='Total Prosper Loans' datatype='integer' name='[TotalProsperLoans]' role='measure' type='quantitative' />
      <column caption='Total Prosper Payments Billed' datatype='integer' name='[TotalProsperPaymentsBilled]' role='measure' type='quantitative' />
      <column caption='Total Trades' datatype='real' name='[TotalTrades]' role='measure' type='quantitative' />
      <column-instance column='[AmountDelinquent]' derivation='Avg' name='[avg:AmountDelinquent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BankcardUtilization]' derivation='Avg' name='[avg:BankcardUtilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BorrowerRate]' derivation='Avg' name='[avg:BorrowerRate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CurrentDelinquencies]' derivation='Avg' name='[avg:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedLoss]' derivation='Avg' name='[avg:EstimatedLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LP_NetPrincipalLoss]' derivation='Avg' name='[avg:LP_NetPrincipalLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LenderYield]' derivation='Avg' name='[avg:LenderYield:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EmploymentStatus]' derivation='None' name='[none:EmploymentStatus:nk]' pivot='key' type='nominal' />
      <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
      <column-instance column='[AmountDelinquent]' derivation='Sum' name='[sum:AmountDelinquent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BankcardUtilization]' derivation='Sum' name='[sum:BankcardUtilization:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CurrentDelinquencies]' derivation='Sum' name='[sum:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DebtToIncomeRatio]' derivation='Sum' name='[sum:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EstimatedLoss]' derivation='Sum' name='[sum:EstimatedLoss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LP_NetPrincipalLoss]' derivation='Sum' name='[sum:LP_NetPrincipalLoss:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.562172' measure-ordering='alphabetic' measure-percentage='0.437828' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:EmploymentStatus:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Not employed&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Not available&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Self-employed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Part-time&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Full-time&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Employed&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Retired&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:AmountDelinquent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LP_NetPrincipalLoss:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:AmountDelinquent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LP_NetPrincipalLoss:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:CurrentDelinquencies:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:DebtToIncomeRatio:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:EstimatedLoss:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:EstimatedLoss:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BankcardUtilization:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:BankcardUtilization:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LenderYield:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ProsperRating (Alpha):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;HR&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
      <datasources>
        <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
      </datasources>
      <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
        <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
          <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
        </column>
        <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
        <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
        <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
        <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
        <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]'>
        <groupfilter function='level-members' level='[none:LoanOriginationQuarter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' />
      </filter>
      <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]'>
        <groupfilter function='level-members' level='[none:ProsperRating (Alpha):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
      </filter>
      <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]'>
        <groupfilter function='level-members' level='[yr:LoanOriginationDate - Split 1:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Credit Risk 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Current Delinquencies' datatype='integer' name='[CurrentDelinquencies]' role='measure' type='quantitative' />
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[CurrentDelinquencies]' derivation='Avg' name='[avg:CurrentDelinquencies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year-Trunc' name='[tyr:LoanOriginationDate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='Loan Date' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk] + [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:CurrentDelinquencies:qk])</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Credit Risk 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Amount Delinquent' datatype='real' name='[AmountDelinquent]' role='measure' type='quantitative' />
            <column caption='Delinquencies' datatype='boolean' name='[Calculation_475129814591930368]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([AmountDelinquent] &gt; 0) AND NOT ISNULL([AmountDelinquent])' />
              <aliases>
                <alias key='false' value='Not Delinquent' />
                <alias key='true' value='Delinquent' />
              </aliases>
            </column>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[PublicRecordsLast10Years]' role='measure' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PublicRecordsLast10Years]' derivation='Avg' name='[avg:PublicRecordsLast10Years:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_475129814591930368]' derivation='None' name='[none:Calculation_475129814591930368:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:PublicRecordsLast10Years:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814591930368:nk] / [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Credit Risk 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Available Bankcard Credit' datatype='real' name='[AvailableBankcardCredit]' role='measure' type='quantitative' />
            <column caption='Bankcard Utilization' datatype='real' name='[BankcardUtilization]' role='measure' type='quantitative' />
            <column caption='Liabilities' datatype='boolean' name='[Calculation_475129814592937985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7) AND NOT ISNULL([RevolvingCreditBalance] / [AvailableBankcardCredit] &gt;= 0.7)' />
              <aliases>
                <alias key='false' value='Low Liability' />
                <alias key='true' value='High Liability' />
              </aliases>
            </column>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column caption='Revolving Credit Balance' datatype='real' name='[RevolvingCreditBalance]' role='measure' type='quantitative' />
            <column-instance column='[BankcardUtilization]' derivation='Avg' name='[avg:BankcardUtilization:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_475129814592937985]' derivation='None' name='[none:Calculation_475129814592937985:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BankcardUtilization:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814592937985:nk] / [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Debt To Income Ratio' datatype='real' name='[DebtToIncomeRatio]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[DebtToIncomeRatio]' derivation='Avg' name='[avg:DebtToIncomeRatio:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Employment Status' datatype='string' name='[EmploymentStatus]' role='dimension' type='nominal' />
            <column caption='Income Range' datatype='string' name='[IncomeRange]' role='dimension' type='nominal' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[EmploymentStatus]' derivation='None' name='[none:EmploymentStatus:nk]' pivot='key' type='nominal' />
            <column-instance column='[IncomeRange]' derivation='None' name='[none:IncomeRange:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='Count' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:IncomeRange:nk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerState]' derivation='None' name='[none:BorrowerState:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' max='1500' min='0' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' />
              <size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:BorrowerState:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Latitude (generated)]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Customer Quality 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower State' datatype='string' name='[BorrowerState]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerState]' derivation='None' name='[none:BorrowerState:nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginalAmount]' derivation='Sum' name='[sum:LoanOriginalAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' />
              <lod column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:BorrowerState:nk]' />
              <geometry column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Latitude (generated)]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
            <column caption='Borrower Rate' datatype='real' name='[BorrowerRate]' role='measure' type='quantitative' />
            <column caption='Lender Yield' datatype='real' name='[LenderYield]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BorrowerRate]' derivation='Avg' name='[avg:BorrowerRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LenderYield]' derivation='Avg' name='[avg:LenderYield:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year-Trunc' name='[tyr:LoanOriginationDate - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:LenderYield:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='Average Borrower Rate Comparison' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='Loan Date' />
            <format attr='subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerRate:qk] + [federated.156xcbr0wgc9lq1a1j15f1cxuruv].[Multiple Values])</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='LP InterestandFees' datatype='real' name='[LP_InterestandFees]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[LP_InterestandFees]' derivation='Sum' name='[pcto:sum:LP_InterestandFees:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[LP_InterestandFees]' derivation='Sum' name='[sum:LP_InterestandFees:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='496' />
            <format attr='cell-h' value='496' />
            <format attr='cell' value='62' />
            <format attr='cell-q' value='310' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <wedge-size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LP_InterestandFees:qk]' />
              <size column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:sum:LP_InterestandFees:qk]' />
              <text column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Loan Provider Profitability 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
          </datasources>
          <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
            <column caption='Borrower APR' datatype='real' name='[BorrowerAPR]' role='measure' type='quantitative' />
            <column caption='Estimated Return' datatype='real' name='[EstimatedReturn]' role='measure' type='quantitative' />
            <column caption='Loan Original Amount' datatype='integer' name='[LoanOriginalAmount]' role='measure' type='quantitative' />
            <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
              <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
            </column>
            <column caption='Loan Origination Date' datatype='string' name='[LoanOriginationDate]' role='dimension' type='nominal' />
            <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
            <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
            <column-instance column='[BorrowerAPR]' derivation='Avg' name='[avg:BorrowerAPR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
            <column-instance column='[EstimatedReturn]' derivation='Avg' name='[pcto:avg:EstimatedReturn:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[LoanOriginalAmount]' derivation='Sum' name='[sum:LoanOriginalAmount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</column>
            <column>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' />
              <shape column='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[pcto:avg:EstimatedReturn:qk]</rows>
        <cols>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
      </datasources>
      <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
        <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
          <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
        </column>
        <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
        <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
        <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
        <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
        <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86981' x='0' y='0'>
              <zone h='50000' id='1' name='Customer Quality 1' show-title='false' w='43491' x='0' y='50000' />
              <zone h='50000' id='9' name='Customer Quality 2' show-title='false' w='43490' x='43491' y='50000' />
              <zone h='50000' id='12' name='Customer Quality 3' show-title='false' w='43491' x='0' y='0' />
              <zone h='50000' id='15' name='Customer Quality 4' show-title='false' w='43490' x='43491' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13019' x='86981' y='0'>
              <zone h='8200' id='6' mode='checkdropdown' name='Customer Quality 1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' w='13019' x='86981' y='0' />
              <zone h='7614' id='7' mode='checkdropdown' name='Customer Quality 1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' w='13019' x='86981' y='8200' />
              <zone h='7614' id='10' mode='checkdropdown' name='Customer Quality 2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' w='13019' x='86981' y='15814' />
            </zone>
          </zone>
        </zone>
        <zone h='11127' id='16' name='Customer Quality 4' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' type='color' w='11391' x='44264' y='30893' />
        <zone h='11127' id='13' name='Customer Quality 3' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' type='color' w='11391' x='9520' y='38799' />
        <zone h='11127' id='8' name='Customer Quality 1' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' type='color' w='11391' x='30838' y='54319' />
        <zone h='26061' id='14' name='Customer Quality 3' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='size' w='11391' x='1546' y='20059' />
        <zone h='33089' id='11' name='Customer Quality 2' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]' type='color' w='11391' x='87388' y='49634' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
      </datasources>
      <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
        <column caption='Loan Date' datatype='date' datatype-customized='true' name='[LoanOriginationDate - Split 1]' role='dimension' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[LoanOriginationDate]'>
          <calculation class='tableau' formula='DATE(IF NOT ISNULL( DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MM-EEEEdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HH-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-HHmm-MMMMdd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEMMMM-dd&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-HH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-MMdd-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-EEEEMMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddMM-EEEEHH&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-dd-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-EEEEdd-MM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMMEEEE&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   ELSEIF NOT ISNULL ( DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )  ) THEN DATEPARSE ( &quot;yyyy-ddHH-MMMM&quot;, TRIM( SPLIT( [LoanOriginationDate], &quot; &quot;, 1 ) ) )   END)' />
        </column>
        <column caption='Loan Origination Quarter' datatype='string' name='[LoanOriginationQuarter]' role='dimension' type='nominal' />
        <column-instance column='[LoanOriginationQuarter]' derivation='None' name='[none:LoanOriginationQuarter:nk]' pivot='key' type='nominal' />
        <column-instance column='[LoanOriginationDate - Split 1]' derivation='Year' name='[yr:LoanOriginationDate - Split 1:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99675' x='0' y='0'>
              <zone h='50000' id='1' name='Loan Provider Profitability 1' show-title='false' w='99675' x='0' y='50000' />
              <zone h='50000' id='9' name='Loan Provider Profitability 3' show-title='false' w='49838' x='0' y='0' />
              <zone h='50000' id='12' name='Loan Provider Profitability 2' show-title='false' w='49837' x='49838' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='11420' id='8' name='Loan Provider Profitability 1' pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' w='11391' x='78112' y='75256' />
        <zone h='12884' id='11' leg-item-layout='grid' name='Loan Provider Profitability 3' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:ok]' type='shape' w='30024' x='21074' y='28697' />
        <zone h='26061' id='10' name='Loan Provider Profitability 3' pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' w='11391' x='82506' y='2343' />
        <zone h='7613' id='7' mode='checkdropdown' name='Loan Provider Profitability 1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' w='13019' x='62408' y='73792' />
        <zone h='7613' id='6' mode='checkdropdown' name='Loan Provider Profitability 1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' w='13019' x='62408' y='81552' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='prosperLoanData' name='federated.156xcbr0wgc9lq1a1j15f1cxuruv' />
      </datasources>
      <datasource-dependencies datasource='federated.156xcbr0wgc9lq1a1j15f1cxuruv'>
        <column caption='Prosper Rating' datatype='string' name='[ProsperRating (Alpha)]' role='dimension' type='nominal' />
        <column-instance column='[ProsperRating (Alpha)]' derivation='None' name='[none:ProsperRating (Alpha):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99675' x='0' y='0'>
              <zone h='50000' id='1' name='Credit Risk 1' show-title='false' w='99675' x='0' y='0' />
              <zone h='50000' id='8' name='Credit Risk 2' show-title='false' w='49838' x='0' y='50000' />
              <zone h='50000' id='10' name='Credit Risk 3' show-title='false' w='49837' x='49838' y='50000' />
            </zone>
          </zone>
        </zone>
        <zone h='6442' id='9' mode='checkdropdown' name='Credit Risk 2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' w='13019' x='65012' y='3075' />
        <zone h='26061' id='7' name='Credit Risk 1' pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' w='11391' x='41660' y='56515' />
        <zone h='5564' id='6' name='Credit Risk 1' pane-specification-id='1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' w='14158' x='79496' y='3367' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Customer Quality 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:DebtToIncomeRatio:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:CreditGrade:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:IncomeRange:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Customer Quality 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[sum:LoanOriginalAmount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[yr:LoanOriginationDate - Split 1:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:LoanOriginationQuarter:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Loan Provider Profitability 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[avg:BorrowerAPR:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Credit Risk 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[tyr:LoanOriginationDate - Split 1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Credit Risk 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814591930368:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Credit Risk 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:Calculation_475129814592937985:nk]</field>
            <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Customer Quality 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Customer Quality 2'>
          <highlight>
            <color-one-way>
              <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:EmploymentStatus:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Customer Quality 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Customer Quality 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Loan Provider Profitability 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Loan Provider Profitability 2' />
        <viewpoint name='Loan Provider Profitability 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.156xcbr0wgc9lq1a1j15f1cxuruv].[none:ProsperRating (Alpha):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Credit Risk 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Credit Risk 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Credit Risk 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Credit Risk 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Credit Risk 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Credit Risk 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 1' width='192'>
      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
      MiV2MB14nQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 3' width='192'>
      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
      OQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Customer Quality 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO29WZAdyXke+mWtZ+8djcbeWAfADIkZDocjcoaULiWRlBy2KVNm2NeSFddh
      Oyxf34j7csPPjvCDlzcvYctheVPIulY4ZEuWqSEtcZ2ds2MZ7Ggsjd67z1anTm3ph4O/Ok+e
      rDqnG93oBlBfBHCqa8nKqvr//Nf8k62trXHLspAhw1YhiiI4jtO1j3MOxthA1+u6jlwuhyAI
      0G63AQC5XA6GYWzo/oZhIAxD5HI5tFotAICmacjn83FfDMuykM/nB322DBn6wnVd6LoOznlM
      +JxzAABjLJURTNNEPp9Hq9VCEARxO7quD0ynnudB0zRwzqFpGhhjsCwLvu8jn893MYD28I+b
      IUM3dF2Pt4nQiAmIEcRf2s7n8zAMA/V6Hb7vdx1jjCEMQzQaDbTb7Xh/FEWo1WqxpKD70305
      53BdF5xzmKaJXC7XxYAZA2TYcpC6IY/2mtZLbowx6LqOcrmMMAzhOE6PtKB/rVYL7XYbjUYD
      tVoNvu+DMQZN07C6uhozhnhPkVFyuVxPHzIGyLDlCMMw8RipJgBi1aZcLsP3fXie1zVyR1EU
      X6NpGoIgiNsJggD1eh2MsVitaTabcRukOhHBi+119WfLnjpDBnT0b5V6QxBHdwAoFAoIggCO
      48QEKp/DOUe9Xu9hLMMw0G630Ww24/OoHVLDSCIwxmK1SkTGABm2DJzzLl2cCE8mOjpXHKn7
      nauyHwDAcRz4vg/HcbquJztApQ6JyBggw5YhDEP4vh//zTnvGrVFYjRNE6VSCZqmwTCM2Fuj
      cpeKDELtyCN6P0Kn/slSJGOADFsCmdgJRNgy8ebzeViWhSiKUK/XY6IlnT1p9Ba9SeJ2FEXx
      tud5SIptyXZAxgAZtgyGYaBQKHQRu8rwZIzFQS3XdZXnyOeLEoIgMo14T4oDqJhAdKECwGCh
      tQwZ+oD0eV3XYZomHMeB53mxjg90Rl9ZvZGlhqy+yEE0+pXjCuK1URTB87weo5fUJtFI3vUS
      IIoiuK6LVqs10GiRYeeh6zpKpVLPCEzqjZjSUCgUUKlUYNs2gF4iT9sWzxe3oyhCs9lMtCc8
      z4v/3tUSIAgCNBqNLqJvt9sol8tdAY0oipRBlp0EjXaD5r88aWCMIZfLdRnFpmnG+j+9F/LW
      hGEYG8SWZcHzPLTbbeX7kyWJaBOI51DMQaQPub1dywAU9haJn3MeB0AqlUrXqLCbwDnHhQ9/
      CKd2D4dOfgV7pw7suj4+CpB3hxLSRMIXoWlaHAn2PC/25avOVXl9ZBeqrB6JNgL1K97emkfd
      erRarR51hx5MzPWg/bsJMzcvoej+CIfGIty4cBNLi9+Aofl45tmXd11ftxOMMRQKBXDOYVlW
      4rNzzuMo7iBZo0nHZQ9R2nmEmAEo8y7tBo8a5C3QdR1RFMGyLOi6vqvUHc45fN+HYRhotVq4
      d/sKsPwnmBrhCCOgHh2ANf82hqxFLMwfgdduYWV5DpWhcew/eBiWZe/0I2wrBkm1J6NVJH7V
      SC9DzjQVf0n9UV3vOA7K5XKHSWq1Gi+VSrEOBiD14kcF6s9uYUYVOOdYWV7Eh2/8FxQKOZjh
      PUyNhKgUKf8EuLcUYO+oDo0xXF8oYnnVwYn9EXgUYTF6AS+9+s0dforNYRAC3Uhb5Ojo177K
      S0QMRFJGlATyYEnXl0ol2LYNo9VqwbbtHk7daQYQU2p3KxYX7uP+xd/FS8cawt71F84YcGBi
      XcscyTcxfuI3MD97E2Psh/Aa97C4MIfxicn4nEHz5ncaURQhiiIYhvHQ/SSDGUDsoREDaIZh
      wDRNhGEI13Vj41iMHKvelxw3EI/HiXMLCws8l8uhVCrt6he+W0Av/N6dm6je+F0cHPf7XxRf
      C1y6o8MyIhyb4mAMuHB3GMgfQuTcBtMMhO0V6EYOxtCz+NzLX99V6p6IMAxRq9VQLBYHUnMG
      RdLILSIIAjSbTQRBEH8P3/djLxO1Q/5+2aDu2l5YWOCWZXV5VTKowTnHe2+9Br85h8nCbYxX
      wod+ZzRAyc0EIcfluxqssZdRGjmC4eFhDA+PdH3kRw0KWlFwq1qtgnOOoaGhLWXUKIoQBAGC
      IEAURQjDMI4Gk3ouZp0CHfc4xRKAXnuAtnukxMLCAi8UCl0h7M10GOie8NButxGGIUzT3BIx
      udPgnOPKpQ9QqP8hhkuP7r5ByOG4HGtNhmpTA8vtx+SRVzA0Mo471z9Aa+0yjMIhHD39Mxgb
      m9iWPrRardifb1lWPMeWMjALhUKswpBHxzCMeN+gCMMQ9Xq9h7hVEA1gxhiCIOiZMqlyi8qM
      atBDbZZAKVebvDT5fB6apqHdbsP3fbRarZhzc7lcLJZEHc40zU3d+1FidXUV7fk/wb496edt
      te1k6AyVIkOlCAAcnN/B6tJ/xtwdHQdHQlj7GYJwEXMXLqA69cuYPv7clt2f8utJL7dtG4Zh
      xJ4vgu/7MbFTUIu+aZIOrgLNCCMppzqf0htktUtMuZB1fzEoKZ8Tq0CFQqHLv06ih4wd1XQy
      st49z4vFY6VSiY0VMc9DNcmB/jZNE7Zt76h4TwPnHO/88Pdwevxyj6qy1fcBNu9ZWakD952j
      OHTyK5jaf6jrXaf54MmTQkRC3951Xfi+D03TUKlU0G634bouDMPoYgDGWKwGeZ6HRqOBfD6P
      XC4Xj+rAekWGpO8cRRGWl5fRbrfj+IHKC6RUZRQ5Q0l5RaIkMID16WWWZcVTz0j/osCT53kw
      DANRFMUPQHk6lPsRhmHPRATVjCD5GCUuaZoG27Zh2/au84L4jRmw7dEwYsgj10YxWgZGStfx
      7rt3UCj9XQCI1U+VikspzIwxOI4DTdNQKBTgui5c142jt5qmwfd9NJvN2OCk64kOms0mSqVS
      PELT4Ec0BKyntliWhWKx2NMfTdMwNjaGWq2WGAmW3xf1Q0VndH9KsaA2icYNw4AhGgtkVYuj
      AXEK+VoBdHE/HRNFEtV1aTQaXS9K7pycyhBFEVqtFlqtVmro/FGjXq+haNYBbL+q9jCqaOw2
      1KIuAtQ0rSsDUryG1FTOOQzDQLPZhO/7PWVIXNdVfkOiFWIQ0eAkRpLv2Wg0wFinVIlsHzLW
      yRUSJ8cnvSNV4Es+jwZUYgBN02LJFoYhDJEIxYkF4o3kB6Bf8cYk9sh/a5pm/OLFdkSLPg3U
      STnx7VEjDANcfO9/4OyB3W2nqFQCApUOKZVKMcFx3pm+SAWsaNQOgiA2an3fR7vdhmVZ8XdL
      u69ovHqe1zXJXQTnPK7wQLahKPVJHQ7DsMvIbbVaPWqdOLiKAylt27aNMAzj1BpR3YuiqDsX
      KGmkpsZl/Us0PNrtNjzPQ6VSiQ0l+fwkl1QSp5NRJDLWdkIUpZxzzM/dx92rP8Sx4SsAdl4S
      bQSqb1mv15HL5eLaOCIzECzLgm3bcfo5gJgQgV6pLUMkStWITL+iZkHzesXqb6LbE1ifAJ/E
      iOJz0vVigDefz8PzvDhNms4xxI7JoiTJ2JAfVNzfbrcRBEFcjEh8EaKYVr048QEIZGQXCoV4
      lNgurK6u4IOf/CfkjTY0tDFe9nF6QsfjRvwq0Ht1HCd2UBDBBUEQv1dydpim2cUAaW3K7sU0
      JhEHGV3X47Z9349Va9M0Y0OcHDQqelMNnGSwU39INdN1HcViMW7L87xeCQB0z5lMIn6Vu4mO
      0UuTRx/i6KTRXhRbqodzHAdhGKJYLCqv3wq4rouDw6uYGqO+7/50jCSkeUKAjkEq23JAJ0XA
      tu3Yx0/XpEnszQxKFCeg2j4ECnIRaDufz8eSSWU8U9KkbduxiuX7flxLiFQecvmTZOhiABVB
      i0iytJOOiS9QVqHkSQpyW7RPHFlorud21DINwxD3717HvkL/c7fa178d95B1ZJmIVfegwU+0
      Cxhbn6yikuQqdUfW06ntpOdJUq+IXtrtdswwZMwT0fu+3zWbjPNOhJpUJcYYisViHF1ut9vI
      5/OxQ6BHAqS99H46ez9/M7AeLe4pUZdg6MojD3mWKDV6q+C6LTRr8/DLGoDkOjbAo0kX34p7
      iCqt+C9pdpRon4kODNW3EttL66/43ZMGUNEBo2ImscobuU+JWSkAR3+TSmWaZpyFQIV2GWM9
      8SwtSZcSOyn+U01SEf+pINsB4otLuy9dK0LTNLRaLdRqta5SeQ+LYrGEL//8r8If/nO4vWgh
      ih5ezO8kVIOV7EgQv4nqWtmLp2pT/O5p31W+hmIC4jGVlCoWi6hUKrHUF7UI8b5BEMRxqEql
      Ese0SBWi61qtVuyh8jwPmkosyg+isgtU16RBFJlJGJQ56FzyWQ9y/qA4dupzmHrub2JmbR/C
      aOvaHQRb+RwEFeOKRC2qMKr3n+bNEduTJfUgqrR4X9VxTdO6ShyK8SnRlmk0GnEglSSAmDEq
      9om0iHq93slZEm+Y5PURy9clvQhZX096aFHMJp3XT5oQwjBEu91Gq9VCsVjcMpVodGwC9gv/
      J668919wdOQ2HlUYYquljGx3pe1POzetTdVAmEYn9DfNolO1R7QRRRGq1Wo8H0A8TuVNRMag
      GAZti/dLsoE0VQfFfTKHqghXNbqL16n2q0SxLNaS7ifC8zwEQTBQBuFGUCyWcPzct3Bz4fFd
      PUcehcX3Q4Em2p+kWqTp7XKb4rWqdugfeWCojqismqnUG9d14TgOms0mHMfpStUhUJHdVqvV
      lZmQRsPx2EbGjmr0VYlElVgk40QlRpP0TzouitF+xrYM0u220iYAgHKlgqDwOQTho1WFthJp
      g42qdEva6C9C/k4qwpfPlRnQsqyupEnV/eSqb7RNSZryvUkrGJSG+wp3mXjTdDu546KISnsZ
      4kOIDJSmCsl9pF8ybraqgNbZc1/GhdlxzC2HCEOOtvd4FeaSbTbx/ctRefpmtC9NCvfT8+Vz
      5fNItbZtO3ZP0r3l3yStI+1+nPOuIg9iaUWR8fuWRVFxThp3dbmYJMZJ0sNUI79qW9U3sU1R
      XFIClO/7sCxr09P2crkcvviLfxfz83P4o9f+B46deAbl1e/jyOTOS4W0dwOkq7b0vsRy5u12
      uyvQOIjdp7pPkprEWCf9QkxRINUGQOzJoWBWUpUSkYGTtARKoxDTOOhacXA0ZEITK2qpjBwx
      hyOJaOWXJY/4sr+3n/Gc9JHl0Y1StWniNH1cMrg2k1RHz7h37xTOnj6Cy5c/xs+djcBY8st/
      GPQjarlvG2lL3qbqzEkVmUW1NkndUd1THpjIm5PL5bomX4mrQFJSnO/78QAmQqY3+VfWKCgl
      R0XDxFhRFEET9ShZ5NHDyNXZVB9JFKcqoyNNZMqEpMorSRLDIighTz5GJbgHVYt838fVyxfw
      +vd+G9//49+KX+S5z/88dMPGldl8l4tuNyJNfUiCrus96RE06IkjaVqbMpHSfPNyudxF/K1W
      C9VqNX63lUolTtIjRpA9OXLxhiS6IltAdY64jzHWLQFUYkWlh8vSIel4UhsqRlAxn/xQ8j1k
      kGdABmMdt1u9XkepVEol3JWVJXz6zu/iwPAynpsCLt621ysJaxq+9OVfwAdvfxcN5x4Kua33
      jw46+qe2ge5obVq74n5RMovSHkCXDt1PKudyuTgdPknqkhpEE1MoMY7atW07XjeMXKAUxZVV
      aRVjyjQsQry2ywYgIyhNt0pqdNBjqpwQcVK9+MFI/JLHQDSUxIcR70kjlSp8T0ETFRM0mw18
      +uF3UV25g0MjKxgpM3AO5PMmPvngxwB0GKaFKGjh6Ng8LHN7AldbiUFVJPqlmX+qdzyoQ4Im
      0pAkjqIoTmMWp0PS9xG/gyx9TNOMXdz0/ck+ANAV+JL7m0TDsjrelQ5NjSZVNlbp3HSeylhW
      QbYLZE6WA2UkRkksJi2kJkOuGE1t09xn8b53b9/EwtX/hqMTazCGGQDqIzA90YAX/CmiiCNs
      A7oG5Ce0+JztwEbsACUUlw7isaHRlQi2VCp1XaPy3Mm/lGXabDbjb1AoFJDP51NVUNXyRcB6
      gV1a2EKM9xQKhXjSjoy0iuHi/q5IMCFN7Uny2ojniC9Nhsp26GdAkxgkl1nSdbL0EN16AOKI
      onju1Us/hbbyHRyfTJ7xZJvAVhD8oIT9sGpQkmCSCViVFEfvmQodJCXOybQgvnvK8aFv5Lou
      LMuCaZpd15CeT6pNEoPQXHFiApIaFPmlqZyDqj2iFmIkXaB6eSJRyg8tMkWSjq/S3Qb52DRV
      jxKcOOewbTue3ykvxCYa7/l8Pu6PWKeGPmyuMIT5ezmUcg0UcgxboIInPttW6Peb7YdqYFLN
      wRC/n+hKFFUV1feVM0RFTYIWw+Ocx0RPapJY6jBNQjDGUC6X46mUNDC2Wq04+a1fdWmVKtcz
      I4w6IgdJNku84guTR4w0VUmEpmkx8Q8PD3cdsywLa2tridzPGEudP3DoyElM7f9/cfXqp7h8
      48/w/JGVhyLUjejL2w2VZBe3VQMUsF6ZjUbsNNtQblP8pZx9sd1arYZyuRy3K+b5i8VxZVCZ
      lUKhELu4qQ2axC/Sk4pW5QEbUCyRlDTnUnYn0Qgrvug0YqZz5Zfej5FIh0xTqcRRX9XvJHDO
      cefOHRiGgYmJSeT11Ycm3EEk6aPAIDq/CBr4xAnjtD9Nsvdrk1yf9H3K5TJM00Sj0YirURCj
      paHVamF1dTUunCX68l3XRa1Wi5lCRcNEryLNRVHUYQCRmJMmn5M4VI208q9qlJCrwYltMrZe
      RULssKZp8VpTaQxAk+bJuKX2SZ9Ng2l2tMDx8Qno5WcR9sn7CUOOWwt5zCyqq0Q8jPdsqyDe
      QmWnyYMFfX+ym8Rf1SAlt6nK/6LjzWYT1WoVjUYjXjSvWq121Q8iFWuQgZQMbDnviyRNEARK
      41d+JtrX4wVKeljxb5WYT3pZ8gtRtSlyJC2VI44e/UA+ZVpWSfzIadcz1onwEkannsXNm1cw
      XnZRKTBUmxwNJ8RIxUAxx7BS17HIP4+jz30Oty7/GBH/CNou0PNlcK5WTbrPSVdnbduOI7Iq
      +yFpW1ajaZsmvYvFEghUOS6tvyJE6UR2HXmCKBlOzmYgBqDr4oJZ1Gnx5mmE2k/HHcQIUe0X
      Q+KqZe7TID5gqVSKvRAbTYibPvYMGpN/D/fv3cL86jzG9hzERHkUK4u3cXPuKsYmj+LFM5/H
      T9/+Pib1j3uIf7chTR8W9XIViHgdx4k9OHR9En2IbQ6iCsoGuThyiwyUNpiR/UCFrkzTjO0E
      8V6crxd+o7Z0Xe/UBpVFgwpJzKCaNie/oKR4gdi2+GGotMVmR1My4jab/9MPzWYD1975LRzd
      U9vytrcC71/T8ewrv9mzXyYiURVVERjtEyWBSs1RtZn0vVX0oWJU8biqbaI9ImTKAaOYUaPR
      iNcrVrVH6lcqdYjGkAzVC0vT0+UHlfU98ZykoMigEL1G24FisQRXn8ZW2LPbaRSL4h9QFyJI
      In65HbFKm3iunLcltpnUrkq6i/uSpL/8LOVyGbZtI5fLxTVqbdtGFEUoFotx3aOkQVfTtHUG
      UBE657zHvSR3RjQ6+nlhxBFepVeKEGvDPAw453j3nTfQbDawtrYKTxE1HBS+vx6FtOzclhBv
      0ij3sJCNUnn2lHwv0W6S/5mm2VW4Kqmvsu2l0gpU/VMRfj/vHdWNJTWNMkur1Sqq1SpqtVpX
      WkwSDcdGcJIak5QKS+gXyU36W9ynun6rMi2bzSaipe/ik+9/B5bJEdrHMX32lzA6Nr5hCfGD
      P/suxsbHwUMXFf89aNrW2wAbUfvSRm7Vd5L391NnxNGWCtaKpc1Vg1jaqK/qP4C4gK3owEgD
      Eb28TxzEKeYg1gdS9c8QH1LuWJqnQNTbVR3sJ1bFjqrOo4U1HnbxjFKphOK+XwBnNtq1m5iy
      PsHcx/8MV4J9OPvyX8HQ0HDita7bwtz9+zh8ZBpOs4lx8woOG+9CswC9uPMGcNr7pZFvkOvl
      0TFJKqXZCYP2SWYaznlsZFcqFdRqtb6MmXRMtkdV9onc165UCFkkyrqerLsn6WpiG/1eStI1
      VDR1K9Yue/bclx60/TlcvnAAjeo7KOx5EeVyJfEaz/Pw0U/+PfYWZ/HGpQpKBQPH9tQeui9J
      GHTAGBTiIKQaVVVEryIWmcDE/KBBDdx+koLWDKA6oM1ms+s8Ear3RHq+aKfINoholNP+KIrW
      1wdQPUA/w0js4KAGsXxcvo+ojtEKNVulDjHGcOrsy4hOv9S3zXt3ZzCRn8VoRcdopQnOuwNM
      W42tZizVACYGrESVSLYVVAQuSxT6buLEEzlfSCUZxIFTnH9Ac7npeC6XU2Z5ijAMA8ViMe6X
      uIyq2MckMMb6T4ony5pm64gXb2aEV3WCfqlm4yDzER7mfv2In3OO2soMhopiPlTvObsVDGpd
      n/apFspIghh0ooQzuU16pyqjWtzuV9pchK7rGBoaijMEZHWNsfUkO2JEMV1+UBiiSFDpgTQF
      jYJLIpIMqkH0T/Ea8vvTvFGaRLFdfvx+mLlxCUP+G7Dyak/VVqsrWw36EqJhKBJskp5M303c
      J1Zmk0duYF01lm05moAkEq84DyONRjjvpFAUCgWUSqVYHRa9UOQFiqIIjUajSxIRZC1FfA76
      NUQxoVJjNE2Li0/JIwmpJxuxC8SOkHdB9NnTaFIoDFCmeRvgui5Wbr2GE3vTU3NV2AqJuJUQ
      iUxWfQjitxQHQVX2J11P68WR7i0yhng/cdFFuc1B1GsKbNEadDTJhnK8qHKcSEtEq2nt0jbn
      fJ0BxNGCIMYAZCKnB1QVT5WNJ1VHKGS92yaW37s3g7xe3fT1u4X4VcavbBgT+un6ImPTpCLK
      t5FzbuRtsW2Z+VQ0IjOM4zixFkIz1OgY5RCRekbTJSluITOCaqA2qFQFpaYSxNwP1aJ4shhT
      vVCVbkkrveyEatMPURTh6sffxcvHObCJGWA7TfyyOgOovXviflENldUYuVqfuE3JcuIkpTSm
      k+8vq96qfg8PDyvphFQkMQhLNaDIkFZlEsgSjjEGg1QYUYeyLAvlcjm+QDRexEZEsapSf2Rd
      U1yfajeCMYbhiVNw20so5HpnuG0nooiDc0DXH96hoNoWCV21P+nvtDapcgNVdaD9STV80gie
      QFJFtRwWuTnF9YupDXKdijSpGqjlb2pQw+JDiWu4iiF08VcOnKmMKvEB8vl86sSW3QDGGF54
      6St4639dxlhuCQf3bK/rk7BSA5bxIrzQxDjexORI56ZhyMHRmYi/0feWxLTyt0r7dklqEoFU
      InHKZNI18j3ldugY0Z8KVNtfVuNkxlQZ6kl90gDE7kfDMLqIlHOuLEWiuqHI8fJNaCrbbiZ+
      gmXZ+MJX/xbmGuNgbPvdnfeWLbSGvgkOBt6aQcjXI99/+JaO772n4fVr+/HaTzWs1LrFelLf
      yA0qv28V4SVNHqFf+kfeHJXOTtm3ruvGv0mFd8W2VKB1oolRoiiK5/6KqrhcGFd8RpW9mvSu
      4vkAFIkjdYYWGEjyq5JFr3pQUR0aGhpKfeDtwtraKiqVoU3ZGlEUopRbl4rbxQQrdQ1u/mU0
      7v4UZ/fegSEEpsOQozK0B6fP/SzGx8exvLyM19/8E7xyahkj5fQ4CUf3x5fVniSkBR2TRm0A
      sTPEsqyYltLKkqQZysA6E6jevTjqy+qWSiKkvad4SiS5kOjhXddFvV5XFhalBybk83kMDw9j
      eHgYQ0NDsYFLgQzZFfaosLa6jO++9p2BiTeKIly/ehFXP/2oM+L4neKtg16/USbhHFjwTuPs
      uVdhogFDojtdZ7Ciu/jk44/AIw6nsQrNLOHW2kFcmytgpZbmSuRwHAeO4+DOnduYn7vft58q
      1UhlD6hGVcMw4sFT13Xoup7qgRHVatlWkG1MGbJ6LarqYt/l8xP/dhyHi1UTwjCMiZ8uEF8O
      lb2r1+vxotgiyDdL3p6dAuccrZaDfL6/6jV3fxYfv/WfcXpfDZ7PgclvY2LPflz/4HdwbHwp
      tgOuzzLsG4uQtx+eoa/eY5h+8f9Gu93G2pXfwv7x9X43XY5CjuFPfmqgMHIGobuIF7/4Sxif
      mIBpmvA8D1cuvA2j8TqGCx6CEIg4UMwBeVtD3Ylwc06HaTDsHfFxcfEZvPSlb8TtJ6lG4rxg
      0T5Qvb80PRxAHDeS6WOjgyGN8rStskOJqZLSO2QaFp+1iwE476wmLk4do6ADY51CRsViMc61
      EOvsiGi32z2T3HczwjDEpU/eBF/9MXKGCz7xTZx85hxqtTVcev1fIm+FcDGOPdNfxfzl38eZ
      Q73r6/aDH3C4HmCbQKMV4X77WXz+1W/h/bdew9Hi2zCNzseZX41wu/U8KqUcIlbErRuX8dLL
      r2D62Omu9qIowurKEpaX5mCYNgzDRG1tHs7aLQyxK5gYiuC0gYszDFNjDOHw17Bn76EeW63V
      clAoFOO/RbVCxQAyIck1g0TQrDyV98f3/Q1n+soGtsgAQRD0TKVVxajofLo+ZgAKOoi5HhSB
      S3rAx8Go3QhqtSoa9Rqm9h2IP1i1ugbOEadqvPvj/4qTwx93zQVQjaqEpZqG2bUi2mwKy/ev
      4NTBAHdqB/F/fOPXkM8XcP7DN3Dlkz/FF075mF21UNj3dZw++0I8CtdrNZQVGbFJ9+ScY35u
      FnN3P0VpaBJzN36CzxyYw7W5AsZO/CpKpU5bjtPEpx++hrI+h/zU17DvwHRfT57q/qIEkLdl
      whfbonqf/Z7l9u3bKBaLmJiYUEoCuq7dbscFFe7fv4/Jycku+1V20FAbsRHcbDbheV7Xg4sT
      1MVOpb2YxxmVyhAqlaH4b8YYhodHus7RdAuyapr2LmbWpjA8dghs5RK+eJbjrnsOX/8L34wN
      x2b1Ls4eCjBbG8fBz3wLe6f2dbVbGer0R37vSfdkjGHv1H7sndrfUUeXbmGxOocTUw4uXv4D
      7D31KyiXK7h96wqembiNYp7ho7vvYf+B6fVnFAphyZDVDdqn8vjIv+LIm+aZIfA8T/oAABo9
      SURBVFy4cAH79u1DsVhEo9HA7OwsDh48CMdxUK/X42S52dlZTE9Pw/d93LhxA6urqxgZGcGt
      W7dw4MCBeKFssT/UZw1ATPwyKGhFIuZJJv5B4ber0LRO5Wg/SPaT09/PTt3FkdwbeO7gGu4u
      AXsPf66LeIqVvfAqv4hTL/16F/HLSNLF06BpGj73xT8H88Cv4dLsCE5MVnHtwo9w5dL7MJtv
      Yaik4fyNNiZyd3Dh4ze6+i4bxGI/qP9iLSnVufJ7kUdkWaWRDWPf9zE6OgrbtuNiWFevXsWt
      W7ewf/9+zMzMxJXDz58/jw8++ADT09NxEqVlWbh06VLPfagvnPPOAhkq4qecj6RYwNOK0ugx
      tNoRPr1XwO3gF/DRrSLmVnWsNTgWViMEAceH14G5lc75tsni6O6pg0Bw57dx6fzbcXtnz72K
      557/EiqV5JlpD4tDh4/h3Ff+Dm5UTyIfXMZY9APcWwxw/oaH0YqBlTrHMH8fS0sLPV4VFdPJ
      6kSS10aMIwCIU90JYmxB9t9z3gmKLSwswHEcXLp0CaOjo2CMxaq5pmm4ePEiJicnY8nUaDQQ
      RRHOnz+PsbGx2KZRSVDGGNji4iKnk0Rdnzw8af7fpxE/+f4fIGdpOPHsz8bpIuc//AkWbv4I
      xz77F7GyvADf93Cs+AZss1dvv7FQxpEX/i+EYYhm08GhQ4cfWd8dp4lLb/02jk0s4da8jlsL
      Fl4508IfveHjW1+xcOWuhuKhv4SJPXtjIkxaI5qeR5URPIjzQ7QBVO3S/WZnZ+OM4Xq9jpGR
      ETDGsGfPHszNzYExhmq1Gi+/tLy8jOHhYTDGsLa2htHR0bjAmmw75PN5sPn5eS4SPmOdzDox
      HSJTfdah8ixEUYSZW1dxZPokAOCd1/4xzhzsLfR6f4Vj9JnfRKUyjHd/8NuoOwG+9NW/jnIl
      eWrmVqPVcnD+nf+Gdu0m1oKDKBpVfHqrjq+94GF8CPj4dgUnX/xrXe7LfgaveA5ti8dEkP0g
      rvyisgXE1GnZ3qBM4rW1tdheocUQxf7JxjiBsU7KT6FQSF4oOy0Y8TRDlRKgaRqmj54CY50i
      UrrWXYkg4sDNOYaa/gWMT0zixz/+PtaqDYztPQ1zk6tXbhb5fAEvvPJt8OJpHB2+ibbnY2hk
      Apdm2vh0xsPBkVXcmbnadY3sf08LUJFUECEXpVURJbVB+4joVfMXfN9HrVZLlTRJMYrY+/OA
      wTXiIPFEKkBK1XblRjIk4/7sPewdcgF0Pl7bZ7h4bxj7z/0mnv/C1/DmT76H1sJbaLfqYLqd
      GEvZTui6jtGxKYxVQgxbi/BadZzYb+DdqzaWGzk4C2/2lBbs532S25eJTpacsrSQ75Vk9Kvs
      DnHijuoaVX/IC6fJXEmNep4Hx3E25X14WsE5x/LiHbAHSXRr9QDX1p7BuS//bViWhXf/7N9g
      4dab+PJngMOTEeqrczsmYU+c/hxu14/h6t0IQyUDK04BJ6YncHeliMOjVdy69nHPaD+IPaii
      JdFzJB5XBcjE+6iYQ+WVEtuV+1IqlWJ3qXhtvV7vlN5JeiDGWJcd8CTAdV0sLCxsS9ucc1z+
      5HXsZT9EudBxk96snsCLr/wK8vk8Zm5ewfHx+3jxpI/ZpQCrOIeXv/zLO/Z+LctCZe/nYdk5
      DOcd1NtF7Dt4ChNTR5GzGXjtPbTbHUkmqiVJo7PKjSnul2lLVndUnhq53STPVNIgYpomDMOI
      5w+o2o0ZIImDniR0EvS23uDknGN+fg7+4vcwXAL8ALiznMfhky/BMDrh/uljZ/DxTAF/+n6I
      RXwRL7/yNeTzOzPvmTAyMgarcgLD+Toqe1/A0qqD6tIM3ro6iqLl4Ma1SwDUI6+MfraBfK78
      t0rFkm0PcqMmaSXyPs/zUK1W45Vn5OuiKOpUh05KdTBNs2th4icBnHM0Gg2Uy+UtaS+KIly5
      9B7Wbv8vnNrvYmEVuLF2BC+/+ucxMjomnBfi3r17WF1ZxnOfObdr3umd2zdRu/7vcHH+OPT2
      FYyWQlRbFnSzCEMLceYLfxWlUuddqaLDKg+RfEz8m3593+9a8pSQ9l6oKJfqHFpCVQWxb6J3
      qVgsJtcForIWSTPsH2fIc5w3i3bbxTs/+v9Rbv4Rzhx0cXOhiEbhF/H8S19HUZjADQB379zG
      /Px97Nt/YNcQPwAcOHgEde0chkcn4YZFrIZHseKOw9f34ehkE3MX/iPOf/Q2PK+dOuqqRuUk
      L4+sHonHk6K2QK8xuxmINodhGMkSIJ/Pw3VdlMvlnpTWDB28/cPfx6nR89A1Bj/gOH9vAq98
      /Tf7eiV2G6rVKu7cmcGVix8gz2fgs1GMF9cwnG/h4KSJKOJ498YIjpz9ZYyMjA7k71cZqqK0
      IL+9HFtQSRBVxmmswz+QSP0Ca2I/SApYlrWeDEcn0YHdPoF9J8A5x83rFzF343Ws1n0grMNu
      A45vw6icwfOv/lyPinDt2hWUS2VMCksx7TYMDQ2B84MIgxDz1+7g2YOL+MH5EsbyTeTsEA0n
      wvOHV3BpdgYjI6M9hq0qCAao7coklUcc7UVVBUiuQC62GUXrC/yl0azs6exZIwyAckb+0wx6
      aZcvvA1j7TUwL8KBSoS55hSGjv8qRg2jJ6WB3t+BA4cei3kRQ0PDOHb8BG7dOAxNu4YDIw3M
      LA3jJG9gdsnH1JgOzcgpiVom4jSjVgXZpx9FUdfgq8pVkwl9UHd9TxBT7PCgRE+Tnp8mXPjk
      A6zc+g6W6jlYe7+BmvUqnHAErZaDYrGUeB3lqOx2kE5cqzWwWoswNaYhX57Cmxd1+KEOy9LQ
      cpo9KgvQO+r3Y/gkb5KY+kDBKnGdYRmyW1QVYBN/DcOIYwK0L7YBRP0sl8sllqYAEK/UTTrc
      kyotFubvY+b6h1hZXsHK4k1E+ghOP/t5TB89DtM0sbKygutXLyJXGMLLL//ME/Ee1tbW8Lv/
      4Z/jzGEOvfJZzC83sbc4j6JZw/DxX8PQ0FDPNUm6e9J5nHcyjJOi4CpJopIqoh3Qbre71iSW
      wRhDoVCAYRhoNpvrU35pkTyxc5ZloZKSoCWOAlQn8nEQ8xvByvIibn/4b5E3HdxaLOPM57+N
      kdERFArd5biBztS/QZd03e3gnOOD999G4LVQrozgyNFTuHv7GjjnGJvYDyA5zwborhooaxUi
      jXmep3RbJgXO5PvJTCIn16mMalXV8ZgBTNMETY3cyHxe2Rp/3BFFEQLfx8L8XczN/BT7j72C
      8Yk9WFlZhmVZGBkZ3ekubjvkkZfWBxNzw+TzgOTJ6CJEvV6lGspxBfEa1b1Fhuqnasp0yvmD
      KZGGYcQTDDaKjdgOuxm+7yEIQrz/07dhGAb27N2HF1/9dnx8cnLvDvbu0YLW37JtO9bDxRI5
      5KVRQRX4ou2NVIZOSrVQ6fvyr2qmmqpN4EFhrO1cUnS3g17qWz/8A8zd+QQv/dzfwOEj0zvd
      rR0FBUCDIIiXqBJrx6oCXOSrT7IHGGNx5QZyWyYZwyomUjGEjKRzSUqo+q5xrq6k+zSg1Wrh
      J9//Q9yemcHcves4efYVHDh4aKe7teOg4maiB0YsekVeGjEtgYKlskok6t2iBNA0baBlV0Uk
      xR1kdUmUDrTMFt1fbo+trKzwYrH4WLjqthJeu43X/vj3cODgITScEKfPfgZjYxNPhDr3sKAl
      Rm3bRj6fj4nMcZx4EXNVBDetkoRKj6fFLHK5XGrVatqX1q64mr18n1SVS64Mt11wXTd2se4k
      kV28eAE5OweAw/McnHrmuYzoFXBdF61WK66HBCB2XzabzZ7qcXQcUButMojIaTksYgLRCFbZ
      DUmMIbpBk+6daAM8CpDLK80g2Qqo9LwoitBsNrC0tITJyb1xwd6n1e4ZBLZtIwzDWG8HOt/M
      NE2YpqmszjzIN5W9POSBpEpxqjwqlUToR+CD9uWRUQDpZfIqJKIOJ+tzg0DMIblz5zb++L//
      HpaXlzr1My9fju0b27YxPX0UY2NjT2TcYqtBgaMoirpsRF3XUSwWYdt2vH5Xv28mErT47Uk3
      Jy9TEASJC6eLbcntbXYw5Zw/OhVoEMjha/IuGIYRF92dn7sHp9lA03GwsjiDib3H8fmXXn5Q
      UtuBZRoII45KZSgOjGTYPJIMSKrZHwRB4jtWuS5Vfn4CMYEYh5I9OCpbQ1UVYhDEcYDdArHj
      NPlB9C6USiVo+/bj9sxN7BsZRyGfw+mzn43Fclr0OsPmkCQp03J0CKLET/Lvi+dSm57nddmK
      4vXyIEnHN6NaM8Z2lwSQIY4eq6urO15yPUM3fN+PV2pU6ehp6QxpLk4xVSLpOlkyiKkQMlTp
      EdTOrpIAMsSHGRkZSTkzw6MEeW+iKIJt2/G6XcC62irGCFRR4zRJACBeilVOzU8KconHVCkP
      cv8JmSWYYVPwPA/NZjOe20vqC+e8Z8E80VjtZ+CSwU1eOpG56BxVFFm0EUSmoPMJslqVMUCG
      DYMxFs9ziKIoXhwPQBcjqKK1aSkMQLfNkVY6kfohRqRFlUi8Z1JwDsgkQIZNgtykVDVEVHfE
      oBadCyQHxshYFv+mf6ZpdhVmEEd6VTt0jlzDSFaj6O+MATJsGhTEEie2kHoiLroIJE+SIche
      IhrBVbk+dDwNg8aUMgbI8FAgdahYXJ8oRCoRBcz6uUFVzCEn0KWpTiQ9ZGM76Rrx3672AmV4
      PMAYi1PqqQyh7/vgnGNhYQEfvf4/MWxJtZgYAP7gFwDnnY2lFsfYiIHVeojRoQ55Rnx97i+D
      goEA8DiCzMDiNtfbF09u+xxBCBTzWsYAGbYGpK8bhoF6vQ7P8+D7PhqNOlqOg6/umYdl9A9S
      vT7L8YWjJbx3xcWLx7endOT8SgCnDUzvtzIGyLC1YIzh9q0buPXp+5g8fBpM09HyOYIIGCTh
      /lElrnA8BoGwDI8nTNPCS4XzaM1+gnbAsLzIMTMKnJ4c4OIHHBBF/Q3nrUBmBGfYcpw6fQY3
      W2OYKDEcGAaenQKGBlwHhKEjRab3Grh+b2tquKYhY4AM24PKkdgLc3ycoZwbbCSnAX9ixMT8
      ko96c+sLsDHh/4wBMmwLtOFp3F7tbB8aAcoD5jCKKs/PnM3j4k23az3mjULpQhV4MWOADNuC
      qX0HseKq151Ig6jyaxrDmcMWvvd2Ha325iWB0o54HLJBMzy+KBaLuFvX4M54OLdPR95Uq0Bt
      n8MN1gm/2eoercsFHXuGDZgDuFBVSJys8+A3Y4AM2wI7l8Pxg3lMj3IsLQSYYBx1l8MyGGou
      R9XlWGtz2LYGylXjADQNmF30sW/CjNviAPyAw9C3yCPEgU9vulhaDTIGyLA90HUdHAy2qWEt
      ABaWI4wOGag7IUbKBg6OM5zOqRfbe/um18UAbjvCexdbePZ4DsPljatVPWDAM0dyOHYgC4Rl
      2Ca4rgtL7+T2nz0shsDSSa7ucuTz3UT+ymeKcNwIV2c9nCuvz17kHFhrBAgCMVlu/RjwQNUR
      twGs1ELYpj5AbzJk2CQcp4mcvnE//sxShJPT3VN0Gevk7TAO3F3wsW/CQBQBs4sBPrnu4pkj
      +TiyC/SPJjddoPQgyyJjgAzbArfVQs6IsJHkhkYrQhsMtqV2Tj53zMab51u4N+8j4hHKeQ3F
      vIZjBzZW1XB+JYDnd6RTxgAZtgW+56Jg9j9PRCGnoVZtJx7XGMMXny0AoFlfwOsXWhvuWzYn
      OMO2o7Z4A7kNMoDGgFwunSQZk6tHb6Z363IpY4AM2wJv7cam3JYbI+iHiBA/+M1UoAxbDsdx
      kIsWN3n15ol6I/jg0xZu3GlnDJBh62HbNgLYALY/m3OzeOGEjQMTZsYAGbYeuq6jbUxhrXE5
      VrZlZSgpzd/1OBotccEWybHPWLzNsXkbgJAxQIZtQdjegz/9t29C48LUXwaQirM0ZuCFr5ag
      i1YoYxgqarh80+1p7/r9AMf2WwhDQNd4zEDhQ2ZLZwyQYVuw98RReC5HLiGVORrmeG7aHjjJ
      zWlzvHjSxrvX89g3Buwf6SzW/qMLyW7TQZAxQIZtgWYYqfbsZlWXPUMBLi4fh61dxGgZWF4L
      8M4Fp+c8KjqhuDNqzQihH2F2MUuGy7BNmH3vY1hhCpUzbGwG/INzD4/78KObyNud8ie/8kop
      PmWtEeH2zSbOHRokANHRvTIGyLAtcO/cR1pRk43Sv4jje3pthA74hp2oWSAsw7bg+V//VTT2
      ppe033qP/8aXS8oYIMO2YHL/PugvnUk8vj3hro2vMZcxQIZtQ258JJHQWYQNccGANSUGb/AB
      MgbIsG04/vKLaE6o123bMx/gg7eaDx3I6oaqGGg6MgbIsG3Yf+Qwpv/eX4NnGz2DfSEE/O/U
      8dMfNx46mNWNTAXKsIswfe453D+9D2t2L6nlIyB8rY7Xv1eD5z+aJDgZGQNk2Fbkcjkc/6Wv
      opkwy8uKAPuHTfzgj6pwvWQmUJVF7zlnE3VEszhAhm3H8WdOYa5QAK/XlGRscmDk3RZ+0OL4
      yreGkbd7l1dda4T49LYHoFvJEZcZcNoci2sRrlgBZDD5D8qt283rBGd4MsA5x83LV3Dp//sn
      KLthvE8esUMAKycsvPJXR1CUZob94P0Gnk+L8DKg5UW4vKzh1JHeSrwqpmm2okwCZNh+MMaQ
      KxTALRN4wAAqdUUHMHa1jbd+ZxUv/pVhDBV1RJxjqRrBMhiGS+k1gSyDodximBwdjKxrzSCz
      ATI8GkwdPIDJ3/iLaPehOA0Mw9c9vP0fVrGwEuD+cojrt1s4PjkIUW/MkI54ZgRneERgjOGF
      b/w89G/+LMI+tioDMH7Hx/v/aRVOM0LR1jE5NEhFuA0awRkDZHiU0HUdX/zr30b15L6Bzt8z
      F+DG76+h6TxcoCApPYJnDJDhUcO2bZgnj8AxNYRa/xF7fDlEe87fcI6PiCT3aMR5xgAZHi0Y
      Y3j11/8y9v3D/wfsb/x5rIwWEKTwAQPQ/sTDYi1MPqmr/cH7EkWZBMiwA9B0HYZp4MiL5/Dl
      f/EPwH/jl7Ga15MT506bmKgMWBV6A4IiU4Ey7AhKpRLOnD2LiYlxjIyO4vjPvIjP/tO/j/rx
      qZ5zWwbD5EFzoCgvR3/6F1WpTAXKsKOwc52AVcQ5Dh07iiO/8StwpWpyOgfWGgMO6wPYCSIj
      RTxLhciwgzCMDvkdOnQIjDEc/8yzuP5zz6PedKANlZCbHEeLBxjy30MYceiC0Zy4hvAGbAAe
      ZakQGXYROOfwPA/NZjP+m3OO5aUFzN06D7N5BVP5NUxUtAf1sbqZoOlG+HSV4flT67ORvSDC
      jXveekkiqrMFYGUtyBggw+4C5xzVahW+70PTNGiaBl3XEYYh2u025u/fwcrd8yj5N3Cg4qKS
      lxhghWF8NIfbzROwLAthBLQuX8Gz/ly8CDfZAYxlEiDDLgPnHK7rwnEcMMag6zoqlQqiKEKr
      1YLndTJCHcfB7O1raK3djQk6jDjckCGXy+HMZ1+BaXaMZ8dxcPePfwennDvQJbUpY4AMuw5R
      FKFWqyGKOhHgoaGhzqJ7nKNWqyEIAmEUZ9J6Abzrl465rosb//P3cLJ2A2KiaeYFyrDrwBiD
      Za0vexSGYc9+xhg0TVNGiOmYyBi5XA6n/sKv4ULxcJerNGOADLsOMgP4/noqhMgA9EvGchRF
      8baKMQzDQOHMS1gTqrZnDJBhV8IwDBQKBTDG4Loums0mPM+DpmnI5XI9Kk4URbE6JI78sqv0
      yMlncG30JGoPivZmNkCGHQfp+prWPR7TqF6v1xGGIWzbRrFYhOM4aLVa8fmy3k+qEblJSUqI
      zHL1/EdwP3nj8WOAxABIhscW8mguIwxD1Go1cM5RLBahaRrCMESz2YyvIYIXmUhUg2RDmTGG
      IHhMZ4Ql6XgZHk/IagshiiJEUdRl0LZaLZimCdu2USh0Al7yyC+3K7dNEsEwjMePAZIeKsOT
      B8YYwjBEvV6P1aQoiuB5XmeecS6HUqm0IXogBiGD+bFjgAxPDxhjMAwDut5JhQ7DEJxzNJtN
      hGEYe4vIM6TSCpK8QiQFMgbIsKvBGEOhUECpVIJhGDHhNhqNOD5QLBZBdqxK15eJXzSOnzgG
      yGyDJw800o+MjMQqTxiGaLVaMTHn83mUSqUeG0D8W0UbTxwDqJAxxZMDy7JQqXQqTpNKRN83
      CAJlWoQKdN4TxwAqYygzmJ8sUJZoGIZxchzQSXcQI8gEOTAmRpGfOAbYKDLpsDuR5uoWj7mu
      G3uIdF1HsVhEuVxOvY4CbMATKAE2ikw67E6kuTYZY7BtGwC68n/omGEYyOVyPaO9eD3FDB67
      SHCGDMB6mkSz2UQQBLAsC8VisSsyLM4uUyGKokwCJCGLNu9u0GSZUqkE0zTheR6CIOg6blkW
      CoVC17ck1Yf+zibFJyBJ/Ga5SLsLmqahUCjEuUIiSFUKggDtdjve12g0sLS0hHa7nTHARpER
      /+6DrusYGhpK9AAWi0VwzuH7fnyO53mwbTuzAR4GURShWl3DresX8fyLr+x0dzKkwPM8NBqN
      rtTpzA36kKhWq3BdF3umjgAAXLeFmzeuZbbDLgIZy4ZhxKnSYkJlpgI9BEZGRgCMxH97bQ+3
      blxGsVTB3NwcnnvuuUxl2iWgdAmSAlky3DagMjSEn/3qL2FsbAxOs4F/96//EarVtZ3u1lMN
      cYI8RY3F2EBmA2wTXNdFEARYWV7EyOgYymX1iukZHg2CIIg9RaJUziTANiGXy8G2bdy7+Ae4
      /va/wtLi3E536amGrutxOjXhoVSgzNAbDLrGkTPbWFuZ3+muPJEYNGBJ7lAqyBvvz1Sg7cWN
      qxeQL5Qxtf/QTnfliYNqIvwg1/i+D8dxOrPKMgbIsJvRr2LEZiPzQRCg0WhkDJDh6UXmBs3w
      VOOpjQRnBnwGwlPJABkyEJ5KBsjSEzIQnkoGyJCBkDFAhqcaW8oAmXGZ4XHDljJApltneNyQ
      qUAZnmpkDJDhqYYhlpbLkOFpw/8Gl2MLdZFOieYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      uHm4WcEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      AX5E+ZdlDuNkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Loan Provider Profitability 3' width='192'>
      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
      cHH+3Gl02X8WZSqvACjT4JvBcWq8bjZjCQ53nWB7aw27SrO2FsXjcjAyNkXvsY6njbHyvaz6
      SU+eUtZ40pAqn0PD5VKjHOazlDXyWwE0nQtvnmPy4UMaq6u49fUV/PUBjrVV49lMszY3gabp
      0hjrBcqlLxCUfj5LWaOg3xGWyaTRddvBb4x1gAJQDvNZyhoFvaHVZvt+OTl5JsqdXOEmLE0C
      ICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAs
      TQIgLE0CICxNAiAsTQIgLC2/tihKMTkxzGooQf/JY9wfuk9T+xEiyws0dnSR2I5w+EhHocYq
      RMHl1RVCKUUsFmX41m10n4/2w8cZvXMVh6+aRDyK013FwMAZPE7b075A+bbwKERniXxrPOnD
      k8+XhhSqRr5dIcphPktZI++uEKPDg9R0HkePraLbdJy+alobang0k8KpDB6MjHH2dO/TJk75
      dmEphxpPHlsONQrxWko9n6WskWcAFEbKILQ8S9fRowzfvUHz4WPUVOj0VAVYnHpAoLnl6adc
      IZo4maZZFjUgv75A2uO+SaWuUS7zWaoaBW2M9WOkMdZ3pDFWedSQo0DC0iQAwtIkAMLSJADC
      0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIK
      9k3xyZ0tbgzeo7Gtne3V5d2uEJEwx453FeophCi4gq0AwbkgPf3nWJmZYCeZYvT+IAsrq4Sj
      yUI9hRAFV7AAaJoinUljc/vp7erA7fRS6XLwcGy8UE8hRMEVLADtnUeYGr1Ha2cXHq+H3lOn
      sdkVbR2dhXoKIQquKF0hnjzFfm6g9KxyaWoljbHyr1GwneBcnm3g9OTNk0+tUtd4Euh8axRi
      HIWoUer5LGWNogSgkI2xyqHGQVoBymE+S1mjqI2xhCg3RT8RZpoZzJfInFLm099/0pEtH3ut
      YWZ2x6FMk8wel+onn9i7jYL3vtw/ncPHDYf3Ppbd+d3r63laK5PB3NPH6Hfj33ONZzZ7ctb4
      we+px/Nn++Uvf/nLPTztnpipKJe//IqZqUXSoSXG1+LUO2L882d36T3eifbD388Y3Lp+nfsj
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
